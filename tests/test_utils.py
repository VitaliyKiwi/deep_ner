import codecs
import os
import re
import sys
import tempfile
import unittest


try:
    from deep_ner.utils import load_dataset_from_json, load_dataset_from_brat
    from deep_ner.utils import load_tokens_from_factrueval2016_by_paragraphs
    from deep_ner.utils import load_tokens_from_factrueval2016_by_sentences
    from deep_ner.utils import load_dataset_from_bio, save_dataset_as_bio, get_bio_label_of_token
    from deep_ner.utils import divide_dataset_by_sentences
    from deep_ner.utils import normalize_text
except:
    sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
    from deep_ner.utils import load_dataset_from_json, load_dataset_from_brat
    from deep_ner.utils import load_tokens_from_factrueval2016_by_paragraphs
    from deep_ner.utils import load_tokens_from_factrueval2016_by_sentences
    from deep_ner.utils import load_dataset_from_bio, save_dataset_as_bio, get_bio_label_of_token
    from deep_ner.utils import divide_dataset_by_sentences
    from deep_ner.utils import normalize_text


class TestUtils(unittest.TestCase):
    def setUp(self):
        self.tmp_data_name = tempfile.NamedTemporaryFile(mode='w', suffix='.dataset').name

    def tearDown(self):
        if os.path.isfile(self.tmp_data_name):
            os.remove(self.tmp_data_name)

    def test_load_tokens_from_factrueval2016_by_sentences(self):
        true_tokens = {
            1802186: (0, 8, 'Назначен'),
            1802187: (9, 16, 'куратор'),
            1802188: (17, 30, 'строительства'),
            1802189: (31, 41, 'российской'),
            1802190: (42, 52, 'Кремниевой'),
            1802191: (53, 59, 'долины'),
            1802192: (61, 68, 'Дмитрий'),
            1802193: (69, 77, 'Медведев'),
            1802194: (78, 85, 'доверил'),
            1802195: (86, 90, 'пост'),
            1802196: (91, 103, 'руководителя'),
            1802197: (104, 113, 'иннограда'),
            1802198: (114, 125, 'миллиардеру'),
            1802199: (126, 133, 'Виктору'),
            1802200: (134, 146, 'Вексельбергу'),
            1802201: (146, 147, '.'),
            1802202: (149, 152, 'Всё'),
            1802203: (153, 159, 'меньше'),
            1802204: (160, 168, 'остаётся'),
            1802205: (169, 179, 'нерешённых'),
            1802206: (180, 188, 'вопросов'),
            1802207: (188, 189, ','),
            1802208: (190, 200, 'касающихся'),
            1802209: (201, 211, 'возведения'),
            1802210: (212, 213, 'в'),
            1802211: (214, 220, 'России'),
            1802212: (221, 232, 'уникального'),
            1802213: (233, 239, 'Центра'),
            1802214: (240, 242, 'по'),
            1802215: (243, 253, 'разработке'),
            1802216: (254, 255, 'и'),
            1802217: (256, 272, 'коммерциализации'),
            1802218: (273, 278, 'новых'),
            1802219: (279, 289, 'технологий'),
            1802220: (289, 290, '.'),
            1802221: (291, 297, 'Власти'),
            1802222: (298, 301, 'уже'),
            1802223: (302, 304, 'не'),
            1802224: (305, 311, 'только'),
            1802225: (312, 319, 'выбрали'),
            1802226: (320, 328, 'площадку'),
            1802227: (329, 332, 'для'),
            1802228: (333, 346, 'строительства'),
            1802229: (347, 360, 'отечественной'),
            1802230: (361, 371, 'Кремниевой'),
            1802231: (372, 378, 'долины'),
            1802232: (379, 380, 'в'),
            1802233: (381, 393, 'подмосковном'),
            1802234: (394, 402, 'Сколково'),
            1802235: (402, 403, ','),
            1802236: (404, 405, 'а'),
            1802237: (406, 411, 'также'),
            1802238: (412, 420, 'частично'),
            1802239: (421, 429, 'одобрили'),
            1802240: (430, 439, 'концепцию'),
            1802241: (440, 450, 'наукограда'),
            1802242: (450, 451, ','),
            1802243: (452, 454, 'но'),
            1802244: (455, 456, 'и'),
            1802245: (457, 467, 'определили'),
            1802246: (468, 476, 'куратора'),
            1802247: (477, 484, 'большой'),
            1802248: (485, 498, 'инновационной'),
            1802249: (499, 506, 'стройки'),
            1802250: (506, 507, '.'),
            1802251: (508, 509, '«'),
            1802252: (509, 513, 'Были'),
            1802253: (514, 523, 'проведены'),
            1802254: (524, 536, 'определённые'),
            1802255: (537, 549, 'консультации'),
            1802256: (550, 552, 'по'),
            1802257: (553, 559, 'поводу'),
            1802258: (560, 564, 'того'),
            1802259: (564, 565, ','),
            1802260: (566, 569, 'кто'),
            1802261: (570, 579, 'конкретно'),
            1802262: (580, 583, 'мог'),
            1802263: (584, 586, 'бы'),
            1802264: (587, 599, 'осуществлять'),
            1802265: (600, 606, 'такого'),
            1802266: (607, 611, 'рода'),
            1802267: (612, 618, 'работу'),
            1802268: (618, 619, '.'),
            1802269: (620, 624, 'Мною'),
            1802270: (625, 632, 'принято'),
            1802271: (633, 640, 'решение'),
            1802272: (640, 641, ','),
            1802273: (642, 645, 'что'),
            1802274: (646, 656, 'российскую'),
            1802275: (657, 662, 'часть'),
            1802276: (663, 667, 'этой'),
            1802277: (668, 682, 'координирующей'),
            1802278: (683, 692, 'структуры'),
            1802279: (692, 693, ','),
            1802280: (694, 701, 'которую'),
            1802281: (702, 704, 'мы'),
            1802282: (705, 713, 'создадим'),
            1802283: (713, 714, ','),
            1802284: (715, 724, 'возглавит'),
            1802285: (725, 731, 'Виктор'),
            1802286: (732, 742, 'Феликсович'),
            1802287: (743, 754, 'Вексельберг'),
            1802288: (754, 755, '»'),
            1802289: (755, 756, ','),
            1802290: (757, 758, '—'),
            1802291: (759, 767, 'цитирует'),
            1802292: (768, 769, '«'),
            1802293: (769, 775, 'Взгляд'),
            1802294: (775, 776, '»'),
            1802295: (777, 784, 'Дмитрия'),
            1802296: (785, 794, 'Медведева'),
            1802297: (794, 795, '.')
        }
        true_text = 'Назначен куратор строительства российской Кремниевой долины  Дмитрий Медведев доверил пост ' \
                    'руководителя иннограда миллиардеру Виктору Вексельбергу.  Всё меньше остаётся нерешённых ' \
                    'вопросов, касающихся возведения в России уникального Центра по разработке и коммерциализации ' \
                    'новых технологий. Власти уже не только выбрали площадку для строительства отечественной ' \
                    'Кремниевой долины в подмосковном Сколково, а также частично одобрили концепцию наукограда, но и ' \
                    'определили куратора большой инновационной стройки. «Были проведены определённые консультации по ' \
                    'поводу того, кто конкретно мог бы осуществлять такого рода работу. Мною принято решение, что ' \
                    'российскую часть этой координирующей структуры, которую мы создадим, возглавит Виктор Феликсович' \
                    ' Вексельберг», — цитирует «Взгляд» Дмитрия Медведева.'
        true_bounds_of_sentences = ((0, 59), (61, 147), (149, 290), (291, 507), (508, 619), (620, 756), (757, 795))
        loaded_tokens, loaded_text, loaded_sentence_bounds = load_tokens_from_factrueval2016_by_sentences(
            os.path.join(os.path.dirname(__file__), 'testdata', 'factrueval_data', 'book_3543.tokens')
        )
        self.assertIsInstance(loaded_tokens, dict)
        self.assertEqual(set(true_tokens.keys()), set(loaded_tokens.keys()))
        for token_ID in true_tokens:
            self.assertEqual(true_tokens[token_ID], loaded_tokens[token_ID])
        self.assertEqual(true_text, loaded_text)
        self.assertEqual(true_bounds_of_sentences, loaded_sentence_bounds)

    def test_load_tokens_from_factrueval2016_by_paragraphs(self):
        true_tokens = {
            1802186: (0, 8, 'Назначен'),
            1802187: (9, 16, 'куратор'),
            1802188: (17, 30, 'строительства'),
            1802189: (31, 41, 'российской'),
            1802190: (42, 52, 'Кремниевой'),
            1802191: (53, 59, 'долины'),
            1802192: (61, 68, 'Дмитрий'),
            1802193: (69, 77, 'Медведев'),
            1802194: (78, 85, 'доверил'),
            1802195: (86, 90, 'пост'),
            1802196: (91, 103, 'руководителя'),
            1802197: (104, 113, 'иннограда'),
            1802198: (114, 125, 'миллиардеру'),
            1802199: (126, 133, 'Виктору'),
            1802200: (134, 146, 'Вексельбергу'),
            1802201: (146, 147, '.'),
            1802202: (149, 152, 'Всё'),
            1802203: (153, 159, 'меньше'),
            1802204: (160, 168, 'остаётся'),
            1802205: (169, 179, 'нерешённых'),
            1802206: (180, 188, 'вопросов'),
            1802207: (188, 189, ','),
            1802208: (190, 200, 'касающихся'),
            1802209: (201, 211, 'возведения'),
            1802210: (212, 213, 'в'),
            1802211: (214, 220, 'России'),
            1802212: (221, 232, 'уникального'),
            1802213: (233, 239, 'Центра'),
            1802214: (240, 242, 'по'),
            1802215: (243, 253, 'разработке'),
            1802216: (254, 255, 'и'),
            1802217: (256, 272, 'коммерциализации'),
            1802218: (273, 278, 'новых'),
            1802219: (279, 289, 'технологий'),
            1802220: (289, 290, '.'),
            1802221: (291, 297, 'Власти'),
            1802222: (298, 301, 'уже'),
            1802223: (302, 304, 'не'),
            1802224: (305, 311, 'только'),
            1802225: (312, 319, 'выбрали'),
            1802226: (320, 328, 'площадку'),
            1802227: (329, 332, 'для'),
            1802228: (333, 346, 'строительства'),
            1802229: (347, 360, 'отечественной'),
            1802230: (361, 371, 'Кремниевой'),
            1802231: (372, 378, 'долины'),
            1802232: (379, 380, 'в'),
            1802233: (381, 393, 'подмосковном'),
            1802234: (394, 402, 'Сколково'),
            1802235: (402, 403, ','),
            1802236: (404, 405, 'а'),
            1802237: (406, 411, 'также'),
            1802238: (412, 420, 'частично'),
            1802239: (421, 429, 'одобрили'),
            1802240: (430, 439, 'концепцию'),
            1802241: (440, 450, 'наукограда'),
            1802242: (450, 451, ','),
            1802243: (452, 454, 'но'),
            1802244: (455, 456, 'и'),
            1802245: (457, 467, 'определили'),
            1802246: (468, 476, 'куратора'),
            1802247: (477, 484, 'большой'),
            1802248: (485, 498, 'инновационной'),
            1802249: (499, 506, 'стройки'),
            1802250: (506, 507, '.'),
            1802251: (508, 509, '«'),
            1802252: (509, 513, 'Были'),
            1802253: (514, 523, 'проведены'),
            1802254: (524, 536, 'определённые'),
            1802255: (537, 549, 'консультации'),
            1802256: (550, 552, 'по'),
            1802257: (553, 559, 'поводу'),
            1802258: (560, 564, 'того'),
            1802259: (564, 565, ','),
            1802260: (566, 569, 'кто'),
            1802261: (570, 579, 'конкретно'),
            1802262: (580, 583, 'мог'),
            1802263: (584, 586, 'бы'),
            1802264: (587, 599, 'осуществлять'),
            1802265: (600, 606, 'такого'),
            1802266: (607, 611, 'рода'),
            1802267: (612, 618, 'работу'),
            1802268: (618, 619, '.'),
            1802269: (620, 624, 'Мною'),
            1802270: (625, 632, 'принято'),
            1802271: (633, 640, 'решение'),
            1802272: (640, 641, ','),
            1802273: (642, 645, 'что'),
            1802274: (646, 656, 'российскую'),
            1802275: (657, 662, 'часть'),
            1802276: (663, 667, 'этой'),
            1802277: (668, 682, 'координирующей'),
            1802278: (683, 692, 'структуры'),
            1802279: (692, 693, ','),
            1802280: (694, 701, 'которую'),
            1802281: (702, 704, 'мы'),
            1802282: (705, 713, 'создадим'),
            1802283: (713, 714, ','),
            1802284: (715, 724, 'возглавит'),
            1802285: (725, 731, 'Виктор'),
            1802286: (732, 742, 'Феликсович'),
            1802287: (743, 754, 'Вексельберг'),
            1802288: (754, 755, '»'),
            1802289: (755, 756, ','),
            1802290: (757, 758, '—'),
            1802291: (759, 767, 'цитирует'),
            1802292: (768, 769, '«'),
            1802293: (769, 775, 'Взгляд'),
            1802294: (775, 776, '»'),
            1802295: (777, 784, 'Дмитрия'),
            1802296: (785, 794, 'Медведева'),
            1802297: (794, 795, '.')
        }
        true_text = 'Назначен куратор строительства российской Кремниевой долины  Дмитрий Медведев доверил пост ' \
                    'руководителя иннограда миллиардеру Виктору Вексельбергу.  Всё меньше остаётся нерешённых ' \
                    'вопросов, касающихся возведения в России уникального Центра по разработке и коммерциализации ' \
                    'новых технологий. Власти уже не только выбрали площадку для строительства отечественной ' \
                    'Кремниевой долины в подмосковном Сколково, а также частично одобрили концепцию наукограда, но и ' \
                    'определили куратора большой инновационной стройки. «Были проведены определённые консультации по ' \
                    'поводу того, кто конкретно мог бы осуществлять такого рода работу. Мною принято решение, что ' \
                    'российскую часть этой координирующей структуры, которую мы создадим, возглавит Виктор Феликсович' \
                    ' Вексельберг», — цитирует «Взгляд» Дмитрия Медведева.'
        true_bounds_of_paragraphs = ((0, 59), (61, 147), (149, 795))
        loaded_tokens, loaded_text, loaded_paragraph_bounds = load_tokens_from_factrueval2016_by_paragraphs(
            os.path.join(os.path.dirname(__file__), 'testdata', 'factrueval_data', 'book_3543.txt'),
            os.path.join(os.path.dirname(__file__), 'testdata', 'factrueval_data', 'book_3543.tokens')
        )
        self.assertIsInstance(loaded_tokens, dict)
        self.assertEqual(set(true_tokens.keys()), set(loaded_tokens.keys()))
        for token_ID in true_tokens:
            self.assertEqual(true_tokens[token_ID], loaded_tokens[token_ID])
        self.assertEqual(true_text, loaded_text)
        self.assertEqual(true_bounds_of_paragraphs, loaded_paragraph_bounds)

    def test_load_dataset_from_json_positive01(self):
        base_dir = os.path.join(os.path.dirname(__file__), 'testdata')
        file_name = os.path.join(base_dir, 'dataset_with_paragraphs.json')
        X_true = [
            'Александр Вертинский. «Я не знаю, зачем и кому это нужно…»',
            '21 марта 1889 года родился главный русский шансонье XX века, печальный Пьеро, вписавший свою судьбу в '
            'историю отечественной культуры',
            'Жизнь с самого начала оставляла для Александра Вертинского слишком много вопросов без ответов. Слишком '
            'много «пустого» пространства. И он научился заполнять его вымыслом. Создал собственный театр с безумным '
            'множеством персонажей, каждый из которых — от сироток-калек и безымянных кокаинеточек до гениальных '
            'скрипачей и кинодив — был им самим.',
            'Трехкомнатная квартира на последнем этаже дома на углу Тверской и Козицкого переулка в Москве и сегодня '
            'выглядит так, словно ее хозяин вот-вот вернется. В просторном кабинете все те же большие книжные шкафы, '
            'все тот же гигантский письменный стол с наполеоновским вензелем и бюстом Вольтера.',
            'Сейчас в кабинете все чаще бывает лишь вдова Вертинского. Вновь и вновь перечитывает его письма, '
            'рукописи. Он смотрит на нее с фотографий, развешанных на стенах, расставленных на столе, и словно '
            'возвращает в те пятнадцать лет неизбывного счастья, когда по квартире витает запах табака и лаванды, дом '
            'полон гостей и шумные застолья длятся допоздна. И все это — будто здесь и сейчас. Нет, время не '
            'остановилось, оно сомкнуло объятия, чтобы вновь и вновь перечитывать эту странную, загадочную судьбу.',
            'Считается, что свой голос Георгий Иванов обрёл в эмиграции и благодаря эмиграции. Мол, утрата родины '
            'стала для него тем «простым человеческим горем», которого так не хватало по форме безупречным его стихам, '
            'чтобы они наполнились содержанием. На самом деле это не совсем так, потому что точка сборки Георгия '
            'Иванова была смещена ещё в Петербурге.',
            'Георгий Иванов. На грани музыки и сна',
            'Первое детское воспоминание Вертинского — о смерти матери. Трехлетний Саша сидит на горшке и выковыривает '
            'глаза у плюшевого медвежонка. Горничная Лизка отрывает мальчика от увлекательного занятия: «Вставай, твоя '
            'мама умерла!» Мать лежит в серебристом гробу на столе, тело ее скрывают цветы; у изголовья стоят '
            'серебряные подсвечники и маленькая табуретка. В руке Саша сжимает шоколадку, он бросается к матери, чтобы '
            'угостить. Но мать не раскрывает рта…',
            'Через два года от чахотки умер отец. Однажды ранней весной его нашли без чувств на могиле супруги. '
            'Оправиться от болезни он уже не смог. Когда кровь хлынула горлом, рядом с ним была только десятилетняя '
            'дочь Надя, не знавшая, как помочь. Обессиленный отец упал на подушку и захлебнулся кровью.',
            'Старшая сестра матери забрала Надю к себе в Ковно. Саша остался жить в Киеве с другой сестрой матери, '
            'которая уверила мальчика в том, что его сестра умерла. То же самое было сказано Наде о брате. Спустя годы '
            'Александр случайно обнаружит упоминание о Н. Н. Вертинской в журнале «Театр и искусство», напишет ей, и '
            'выяснится, что это его сестра. Во время Первой мировой Вертинскому сообщат, что Надя покончила с собой. '
            'Только после смерти Вертинского его вдова выяснит, что Надежда Николаевна живет в Ленинграде.',
            'Смерть причудливо и неотвратимо вписалась в его жизнь. Смерть была тем миром, где кончались тщета '
            'мальчика Мая и тревоги Безноженьки и наступал долгожданный покой.',
            'Александр Вертинский появился на свет «незаконнорожденным». Родственники отца и матери не одобряли союз '
            'Николая Вертинского с Евгенией Скалацкой (Сколацкой) даже тогда, когда родились Надя и Саша. Евгения '
            'Степановна происходила из дворянского рода, а Николай Петрович был присяжным поверенным. Первая жена отца '
            'по настоянию родственников Николая Вертинского не давала ему развода. Так что пришлось усыновить '
            'собственных детей.',
            'Жизнь с самого начала оставляла для Александра Вертинского слишком много вопросов без ответов. Слишком '
            'много «пустого» пространства. И он научился заполнять его вымыслом. Создал собственный театр с безумным '
            'множеством персонажей, каждый из которых — от сироток-калек и безымянных кокаинеточек до гениальных '
            'скрипачей и кинодив — был им самим.',
            'Театр стал маниакальной страстью Вертинского еще с гимназических лет. Он любыми способами проникал на '
            'спектакли, оперы, концерты, выступал в любительских постановках в контрактовом зале на киевском Подоле и '
            'подвизался статистом в Соловцовском театре — разумеется, бесплатно. А чтобы не умереть с голоду, брался '
            'за любую работу — пописывал рецензии на выступления гастролеров, служил корректором в типографии, '
            'нанимался помощником бухгалтера в гостиницу, продавал открытки, грузил арбузы на барках и даже '
            'подворовывал у двоюродной сестры безделушки, чтобы сбыть их на толкучке.',
            'С армией Колчака бежала из Владивостока семья цыган Димитриевичей, на пароходах генерала Врангеля '
            'спасались Александр Вертинский и Надежда Плевицкая, уходили куда угодно, лишь бы подальше от Советов, '
            'многие звёзды и звёздочки... Да, в первой эмиграции оказалось немало творческих личностей, работавших в '
            'интересующем нас жанре русской песни, но даже самые яркие их имена блекнут рядом со сверкающей снежной '
            'шапкой Монблана в лице Фёдора Ивановича Шаляпина.',
            'Живой бог русской музыки',
            'В 1911–1912 годах журналы «Киевская неделя» и «Лукоморье» опубликовали первые рассказы Вертинского: '
            '«Красные бабочки» и «Моя невеста» — декадентские, но с бунинской интонацией. «Красные бабочки» — о '
            'мальчике-сироте, случайно погубившем красных бабочек, вышитых на черном платье. Мальчик наказан суровой '
            'теткой, но бабочки являются ему во сне, чтобы отомстить за погибших сестер. «Моя невеста» — о сумасшедшей '
            'бездомной, читающей стихи на эстраде опустевшего осеннего парка. Эта «светлая малютка-невеста» при '
            'ближайшем рассмотрении оказывается «маленьким уродливым существом» с «длинным, острым, серо-зеленого '
            'цвета лицом», «черно-синими припухшими губами», «без бровей, без ресниц, с глубоко вдавленными в череп '
            'глазами».',
            'Свободное от литературных посиделок и работы время Вертинский коротал с киевской богемной молодежью в '
            'подвальном кабачке, закусывая дешевое вино дешевым сыром. В приобретенном на толкучке подержанном фраке, '
            'всегда с живым цветком в петлице, всегда презрительный и надменный, он сыпал заранее продуманными '
            'афоризмами и производил на окружающих впечатление большого оригинала. Но прекрасно понимал, что вечно так '
            'продолжаться не может.',
            'Скопив 25 рублей и подыскав компаньона с театральным гардеробчиком (без собственных костюмов в театрах '
            'тогда статистов не брали), Вертинский подался в Москву.',
            'Здесь он играл небольшие роли в любительских студиях, поступил в театр миниатюр Марьи Арцыбушевой, где '
            'служил за котлеты и борщ, соглашался на любые роли в кино, показывался во МХАТе — но из-за своего '
            'грассирующего «р» был отвергнут Станиславским.',
            'А внутри бурлило и клокотало, требовало выхода и не находило его. Слишком много вокруг было никому '
            'неизвестных талантов и знаменитых бездарностей. Столицы захлестнула эпидемия увлечения кокаином. Его '
            'покупали сначала в аптеках, затем с рук, носили в пудреницах и портсигарах, щедро одалживали и '
            'одалживались. Однажды выглянув из выходившего на крышу окна мансарды, которую Вертинский снимал, он '
            'обнаружил, что весь скат усеян пустыми коричневыми бутылочками из-под кокаина.',
            'Вертинский отправился к психиатру, профессору Баженову, и, подойдя к трамвайной остановке, увидел, как '
            'Пушкин сошел со своего пьедестала, оставив на нем четкий след. Александр Сергеевич сел вместе с '
            'Вертинским в трамвай и достал большой старинный медный пятак — для оплаты.',
            'Справиться с пристрастием к кокаину Вертинскому помогла война. Под именем Брат Пьеро он записался в '
            'санитарный поезд, курсировавший от Москвы к фронту и обратно. Почти два года Вертинский перевязывал '
            'раненых, читал им письма от родных, пел и даже, по его уверению, оперировал.',
            'В 1915 году Вертинский вернулся в театр миниатюр Арцыбушевой с собственным номером — «Ариетки Пьеро». На '
            'фоне черного занавеса в лунном луче прожектора на сцене появлялся высокий молодой человек. На его густо '
            'покрытом белилами лице резко выделялись ярко-красный рот, обведенные тушью большие глаза и печально '
            'вздернутые нарисованные брови. После вступления рояля этот странный юноша взмахивал руками и тихо '
            'начинал:',
            'Я люблю Вас, моя сегоглазочка, Золотая ошибка моя! Вы — вечегняя жуткая сказочка, Вы — цветок из кагтины '
            'Гойя.',
            'После бесконечных ямщиков и соловьев, аллей и ночей, дышащих сладострастьем, с одной стороны, а с другой '
            'с другой — на фоне бравад футуристов, претенциозных поэз Игоря Северянина и одесской шансоньетки Изы '
            'Кремер с ее занзибарами-кларами, — печальный Пьеро Вертинского стал сенсацией. Ему удалось невозможное: '
            'вписать богемную экзотику — всех этих маленьких креольчиков, смуглых принцев с Антильских островов, '
            'китайчат Ли, лиловых негров — в живописный ландшафт одинокой и беззащитной души; превратить ироничную '
            'игру культурными символами в откровение глубокой печали.',
            'Так певец без выдающихся вокальных данных, композитор, не знавший нотной грамоты, актер с дефектом дикции '
            'стал всероссийским кумиром. Издательство «Прогрессивные новости» Б. Андржеевского огромными тиражами '
            'выпускало «Песенки Вертинского», которые впечатлительные курсистки развозили по всей стране.',
            'Начались гастроли и бенефисы, от восторженной и возмущенной публики нередко приходилось спасаться через '
            'черный ход. Посыпались приглашения в кино. Популярность Вертинского была столь велика, что в феврале 1917 '
            'года Александра Керенского называли «печальным Пьеро российской революции».',
            'Как и подавляющее большинство представителей русской интеллигенции, Вертинский связывал с Февральской '
            'революцией опьяняющие надежды на обновление и очищение. Октябрьский переворот заставил протрезветь. Под '
            'впечатлением гибели московских юнкеров, убитых большевиками, Вертинский написал знаменитых «Юнкеров»:',
            'Я не знаю, зачем и кому это нужно, Кто послал их на смерть недрожавшей рукой, Только так беспощадно, так '
            'зло и ненужно Опустили их в вечный покой.',
            'Песня стала настоящим белогвардейским гимном — с нею шли в бой и умирали русские офицеры и юнкера. '
            'Существует легенда, что Вертинского вызывали в ЧК для дачи объяснений по поводу контрреволюционной песни. '
            'Артист возмутился: «Но вы же не можете запретить мне их жалеть!» И в ответ услышал: «Дышать запретим, '
            'если потребуется».',
            'Как и многие эпизоды из жизни Вертинского, допрос в ЧК не имеет документальных подтверждений. Тем не '
            'менее факт остается фактом: вслед за отступающей белой армией, как и многие российские артисты, '
            'Вертинский подался на юг, где все еще верили в счастливую развязку и мучились тяжелым предчувствием, что '
            'ее никогда не будет.',
            'В 1920 году на пароходе «Великий князь Александр Михайлович», увозящем барона Врангеля, Вертинский '
            'покинул Россию, отправившись в добровольное изгнание на 23 года.',
            'Его одиссея началась с Константинополя, где он пел разноязыким эмигрантам цыганские романсы и раздобыл '
            'греческий паспорт на имя Александра Вертидиса. Закружилась круговерть авантюр, лиц, городов, стран. '
            'Румыния, Польша, Германия, Австрия, Венгрия, Палестина, Египет, Ливия, Франция, США… Выступления в '
            'ресторанах и кабаках — между горячим и десертом; в мюзик-холлах и фешенебельных отелях — для королей '
            'Густава Шведского, Альфонса Испанского, принца Уэльского, для Вандербильтов и Ротшильдов.',
            'В Бессарабии его арестовали по обвинению в просоветской пропаганде песней «В степи молдаванской» — в '
            'особенности строками «О, как сладко, как больно сквозь слезы / Хоть взглянуть на родную страну…» '
            'Естественно, в деятельности Вертинского усмотрели происки НКВД. С тех пор слава чекистского агента '
            'бросает тень на его репутацию по сей день — как будто агент НКВД не может быть великим артистом…',
            'Все двадцать с лишним лет, где бы Вертинский ни выступал, он пел только на русском (исключение делал лишь '
            'для любимой Франции, где исполнял несколько своих песенок по-французски). Его основной аудиторией, '
            'конечно же, была русская эмиграция, для которой печальный Пьеро являлся не просто символом утраченной '
            'России, но, по выражению Шаляпина, «сказителем земли русской».',
            'Уже с начала 1920-х Вертинский просил разрешения вернуться — через советское консульство, через Анатолия '
            'Луначарского, возглавившего советскую делегацию в Берлине, — но неизменно получал отказ.',
            'В конце 1935 года он приехал в Китай — в Шанхае и Харбине была довольно обширная русская община. В Шанхае '
            'артист дал двадцать аншлаговых концертов (даже Шаляпину здесь сумели организовать только два '
            'выступления), однако бесконечно петь для одной и той же аудитории невозможно, и Вертинский намеревался '
            'через какое-то время вернуться в Европу. Но в 1937 году его вдруг пригласили в СССР — без всяких просьб '
            'со стороны артиста. Вертинский остался в Китае, ожидая, когда организуют возвращение. Он ждал пять лет.',
            'Что побудило Сталина позвать Вертинского? Рассказывали, что генералиссимус любил слушать ариетки Брата '
            'Пьеро в часы отдыха — особенно песню «В синем и далеком океане». Легенда приписывает также Сталину '
            'известную фразу «Дадим артисту Вертинскому спокойно дожить на Родине», произнесенную после того, как '
            '«отец всех народов» лично вычеркнул артиста из ждановского постановления, громившего Дмитрия Шостаковича '
            'и Сергея Прокофьева. Нравился Сталину Вертинский или нет, несомненно одно — возвращение «соловья '
            'белоэмиграции», мировой знаменитости было идеологически выгодно советскому режиму, тем более в 1943 году, '
            'когда открылся союзный фронт и в стране бродили оттепельные настроения.',
            'Вертинский же всегда и всем говорил о том, что возвращается, чтобы «рассказать о страданиях эмиграции» и '
            '«помирить Родину с ней». «Шанхайская Тэффи» Наталия Ильина не преминула по этому поводу съязвить в '
            'автобиографическом романе «Возвращение». Ее Джордж Эрмин (Георгий Еремин), подозрительно похожий на '
            'Вертинского, прочитав Конституцию СССР, перекрестился и изрек: «Я подумал, что же это — Китеж, '
            'воскресающий без нас!»',
            'Ранним утром 4 ноября 1943 года на пароходе «Дайрен-Мару» Вертинский покинул Шанхай. С ним были его '
            'двадцатилетняя жена Лидия и ее мать, на руках он держал трехмесячную дочь Марианну. Необходимость '
            'содержать семью была не самой последней причиной переезда в СССР. Шла война, зверствовала инфляция, '
            'иностранные конторы в Китае закрывались, русские эмигранты спасались от японской оккупации. Выступать '
            'становилось все труднее. Вертинский пускался в рискованные финансовые авантюры, не имевшие успеха. Его '
            'самой удачной коммерческой операцией была закупка пяти бутылей водки накануне рождения ребенка. Продав '
            'их после повышения цен, Вертинский оплатил счета за услуги роддома.',
            'Первым советским городом на их пути стала Чита. Стоял жуткий мороз, семью Вертинского поселили в '
            'гостинице, где практически не топили, а по стенам ползали клопы. А в местной филармонии артиста уже '
            'поджидала телеграмма из Москвы с распоряжением дать в Чите несколько концертов. Родина встречала блудного '
            'сына.',
            'О его возвращении ходили анекдоты. В одном из них рассказывалось, как Вертинский, приехав в СССР, выходит '
            'из вагона с двумя чемоданами, ставит их, целует землю и смотрит вокруг: «Не узнаю тебя, Россия!» '
            'Обернувшись, обнаруживает, что чемоданов нет. «Узнаю тебя, Россия!» — восклицает артист. В другом '
            'повествовалось о приеме, устроенном в честь Вертинского «пролетарским графом» Алексеем Николаевичем '
            'Толстым. Гости долго томятся, ожидая, когда их пригласят к столу. Кто-то из присутствующих, оглядев '
            'собравшееся общество — граф Толстой, граф Игнатьев, митрополит Николай Крутицкий, Александр Вертинский, —'
            ' спрашивает: «Кого ждем?» Остроумец-куплетист Смирнов-Сокольский отвечает: «Государя!»',
            'Первой советской киноролью Вертинского стал кардинал Бирнч в фильме Михаила Калатозова «Заговор '
            'обреченных». Актер сыграл изысканного, сладкоречивого патриция со следами былого донжуанства. Так и '
            'должен выглядеть настоящий враг советского режима — образованный, воспитанный, обвораживающий своим '
            'лоском. Только такие и могут строить заговоры и вынашивать планы государственного переворота. Сталинская '
            'премия за роль кардинала свидетельствовала о высочайшем одобрении этой трактовки.',
            'Такого же двуликого Януса Вертинский исполнил в помпезном фильме Сергея Юткевича «Великий воин '
            'Скандербег». Возможно, он играл бы маскирующихся иродов и дальше, если бы Исидор Анненский не предложил '
            'ему роль князя в экранизации чеховской «Анны на шее». Одним своим появлением на экране Вертинский, этот '
            'обломок царской России, воскрешал шик дворянских собраний и балов при дворе.',
            'Положение «советского артиста» Вертинского было довольно странным. С одной стороны, явное благоволение '
            'властей: его с семьей поселили в «Метрополе», затем выделили квартиру, наградили высшей государственной '
            'премией. Правда, семья в течение трех лет обитала в «Метрополе» не от хорошей жизни. Съехать было просто '
            'некуда, потому что выделенная квартира находилась на первом этаже двухэтажного дома на Хорошевском шоссе. '
            'Артист опасался поселяться в ней и с помощью сложных маневров обменял ее на квартиру на улице Горького, '
            'которая была в таком жутком состоянии, что нуждалась в капитальном ремонте. Опасения Вертинского, как '
            'выяснилось позже, были не напрасны — квартира на Хорошевском шоссе подверглась налету знаменитой «Черной '
            'кошки».',
            'С другой стороны, из ста с лишним песен к исполнению было разрешено не более тридцати (авторство текстов '
            'Георгия Иванова и Николая Гумилева Вертинскому пришлось приписать себе), единственная прижизненная '
            'пластинка вышла в 1944 году, о концертах — ни строчки в прессе. «Я существую на правах публичного дома, —'
            ' горько шутил Вертинский, — все ходят, но в обществе говорить об этом не принято».',
            'Из эмиграции Вертинский вернулся практически с пустыми карманами, вскоре родилась вторая дочь, Настя. '
            'Гастрольбюро обеспечило артисту по 20–25 концертов в месяц по всей стране от Средней Азии до Дальнего '
            'Востока — в нетопленных, неприспособленных для выступлений залах с расстроенными роялями и пьяной '
            'публикой. Но концертная жизнь в европейских кабаках приучила его работать в любых условиях.',
            'Платили Вертинскому по самому низкому тарифу, поскольку у него не было никаких званий. За концерт артист '
            'получал около 800 рублей, при этом его выступления всегда проходили при аншлагах и собирали десятки тысяч '
            'рублей. Приходилось соглашаться на все, давать левые концерты, выкручиваться, объясняться… Вместе с '
            'аккомпаниатором Михаилом Брохесом он вдоль и поперек исколесил всю страну по нескольку раз, дав около '
            'трех тысяч концертов. Написал два десятка стихов, работал над мемуарами, которые не успел закончить. 14 '
            'лет на Родине превратили бодрого, моложавого мужчину в глубокого старика.',
            'Он не хотел умереть дома, не желал, чтобы родные видели «кухню смерти». 21 мая 1957 года Вертинский '
            'готовился к концерту в Ленинграде, был сдержан и немногословен. Он находился в своем 208-м номере '
            '«Астории», когда начался сердечный приступ. Лекарства под рукой не оказалось. Как выяснилось позже — оно '
            'бы уже не помогло. При вскрытии сосуды рассыпались, как хрупкое стекло',
            'Назначен куратор строительства российской Кремниевой долины',
            'Дмитрий Медведев доверил пост руководителя иннограда миллиардеру Виктору Вексельбергу.',
            'Всё меньше остаётся нерешённых вопросов, касающихся возведения в России уникального Центра по разработке '
            'и коммерциализации новых технологий. Власти уже не только выбрали площадку для строительства '
            'отечественной Кремниевой долины в подмосковном Сколково, а также частично одобрили концепцию наукограда, '
            'но и определили куратора большой инновационной стройки. «Были проведены определённые консультации по '
            'поводу того, кто конкретно мог бы осуществлять такого рода работу. Мною принято решение, что российскую '
            'часть этой координирующей структуры, которую мы создадим, возглавит Виктор Феликсович Вексельберг», — '
            'цитирует «Взгляд» Дмитрия Медведева.',
            'Исходя из заявления президента, понятно, что у проекта будут не только российские инвесторы, но и '
            'иностранные партнёры, в числе которых, по словам главы государства, будут и представители иностранных '
            'научных кругов. Именно на базе взаимодействия науки и бизнеса должен появиться и работать инноград. «Всё '
            'это затеяли не ради того, чтобы построить определённое количество коттеджей или же создать там нормальные '
            'производственные условия, лаборатории. Это всё важно, но это всё инфраструктура. Самое главное, чтобы '
            'там появились люди. Для того чтобы люди появились, должна быть внятная система управления. Эта система '
            'управления зависит от нас. Я думаю, что с учётом масштабности этого проекта, а с другой стороны, того, '
            'что в реализации этого проекта должны быть заинтересованы не только государственные структуры, но, '
            'прежде всего, российский бизнес, я считаю, что координацией российский бизнес и мог бы заняться», — '
            'заявил Дмитрий Медведев.',
            'Это выступление президента вполне объясняет выбор руководителя проекта. Виктор Вексельберг — бизнесмен с '
            '30-летним стажем, капитал которого оценивается в 6,4 млрд долларов. Вексельберг является главой правления '
            'ОАО «Тюменская нефтяная компания» (ТНК) и президентом ЗАО «Ренова». Именно он является владельцем '
            'значительной части российского титана и алюминиевого бизнеса.',
            'О том, почему площадкой для строительства Кремниевой долины выбрано Подмосковье, читайте в статье '
            'Частного корреспондента «Сколково назначили Кремниевой долиной»'
        ]
        y_true = [
            {
                "PERSON": [(0, 20)]
            },
            {
                "PERSON": [(71, 76)]
            },
            {
                "PERSON": [(36, 58)]
            },
            {
                "LOCATION": [(55, 63), (66, 84), (87, 93)],
                "PERSON": [(281, 289)]
            },
            {
                "PERSON": [(45, 56)]
            },
            {
                "LOCATION": [(334, 344)],
                "PERSON": [(26, 40), (299, 314)]
            },
            {
                "PERSON": [(0, 14)]
            },
            {
                "PERSON": [(28, 39), (70, 74), (146, 151), (362, 366)]
            },
            {
                "PERSON": [(207, 211)]
            },
            {
                "PERSON": [(30, 34), (51, 55), (182, 186), (208, 217), (250, 266), (367, 378), (392, 396), (436, 447),
                           (471, 489)],
                "LOCATION": [(44, 49), (71, 76), (498, 508)],
                "ORG": [(269, 295)]
            },
            {
                "PERSON": [(107, 110), (121, 132)]
            },
            {
                "PERSON": [(0, 20), (104, 123), (126, 144), (146, 155), (184, 188), (191, 195), (197, 215), (251, 267),
                           (338, 357)]
            },
            {
                "PERSON": [(36, 58)]
            },
            {
                "PERSON": [(33, 44)],
                "LOCATION": [(168, 185), (189, 197), (198, 204)],
                "ORG": [(230, 249)]
            },
            {
                "PERSON": [(9, 16), (89, 97), (108, 128), (131, 148), (430, 455)],
                "LOCATION": [(27, 39), (191, 198), (414, 422)],
                "ORG": [(2, 16)]
            },
            dict(),
            {
                "PERSON": [(87, 98)],
                "ORG": [(18, 56)]
            },
            {
                "LOCATION": [(72, 80)],
                "PERSON": [(51, 61)]
            },
            {
                "LOCATION": [(151, 157)],
                "PERSON": [(130, 140)]
            },
            {
                "PERSON": [(80, 97), (233, 246)],
                "ORG": [(65, 97), (177, 182)]
            },
            {
                "PERSON": [(373, 383)]
            },
            {
                "PERSON": [(0, 10), (46, 54), (103, 109), (166, 185), (199, 209)]
            },
            {
                "LOCATION": [(135, 141)],
                "PERSON": [(36, 47), (79, 84), (177, 187)]
            },
            {
                "PERSON": [(12, 22), (49, 60), (94, 99)],
                "ORG": [(34, 60)]
            },
            {
                "PERSON": [(105, 109)]
            },
            {
                "LOCATION": [(389, 408)],
                "PERSON": [(162, 178), (202, 212), (251, 256), (257, 268)]
            },
            {
                "PERSON": [(171, 187), (226, 237)],
                "ORG": [(134, 169)]
            },
            {
                "PERSON": [(160, 171), (215, 236), (257, 262)]
            },
            {
                "PERSON": [(68, 78), (267, 277)]
            },
            dict(),
            {
                "PERSON": [(123, 134)],
                "ORG": [(146, 148)]
            },
            {
                "PERSON": [(30, 41), (197, 207)],
                "ORG": [(52, 54)]
            },
            {
                "LOCATION": [(107, 113)],
                "PERSON": [(39, 59), (78, 86), (88, 98)]
            },
            {
                "LOCATION": [(23, 38), (203, 210), (212, 218), (220, 228), (230, 237), (239, 246), (248, 257),
                             (259, 265), (267, 272), (274, 281), (283, 286)],
                "PERSON": [(128, 148), (403, 420), (422, 441), (450, 459)]
            },
            {
                "PERSON": [(226, 237)],
                "LOCATION": [(2, 12)],
                "ORG": [(256, 260), (357, 361)]
            },
            {
                "LOCATION": [(118, 125), (307, 313)],
                "PERSON": [(34, 44), (263, 268), (332, 340)]
            },
            {
                "PERSON": [(20, 30), (96, 117)],
                "LOCATION": [(155, 162)],
                "ORG": [(67, 88), (133, 152)]
            },
            {
                "LOCATION": [(31, 36), (41, 47), (50, 57), (99, 105), (335, 341), (381, 385), (447, 452)],
                "PERSON": [(153, 161), (279, 289), (426, 436)]
            },
            {
                "PERSON": [(13, 20), (29, 40), (103, 108), (194, 201), (233, 244), (388, 407), (410, 427), (438, 445),
                           (446, 456)]
            },
            {
                "LOCATION": [(338, 342), (392, 397)],
                "PERSON": [(0, 10), (142, 147), (149, 163), (248, 260), (262, 276), (304, 315)]
            },
            {
                "LOCATION": [(45, 51), (52, 56), (77, 83), (258, 262), (320, 325)],
                "PERSON": [(58, 68), (120, 125), (174, 182), (425, 435), (630, 640)]
            },
            {
                "LOCATION": [(42, 46), (221, 227), (251, 255)],
                "PERSON": [(74, 85)]
            },
            {
                "LOCATION": [(92, 96), (194, 200), (262, 268)],
                "PERSON": [(70, 80), (345, 356), (379, 408), (529, 536), (543, 551), (564, 581), (583, 603), (652, 670)]
            },
            {
                "PERSON": [(27, 38), (53, 58), (68, 86)]
            },
            {
                "LOCATION": [(319, 325)],
                "PERSON": [(20, 25), (26, 36), (65, 80), (95, 105), (169, 185), (239, 243), (286, 296)]
            },
            {
                "PERSON": [(31, 42), (607, 618)],
                "LOCATION": [(137, 146), (260, 269), (399, 416), (506, 520), (673, 690)],
                "ORG": [(722, 734)]
            },
            {
                "PERSON": [(105, 120), (123, 139), (140, 151), (323, 333)]
            },
            {
                "PERSON": [(13, 23), (95, 100)],
                "LOCATION": [(179, 191), (195, 211)],
                "ORG": [(102, 114)]
            },
            {
                "PERSON": [(8, 19), (327, 344)]
            },
            {
                "LOCATION": [(123, 133), (199, 206)],
                "PERSON": [(89, 99)]
            },
            {
                "LOCATION": [(31, 59)]
            },
            {
                "LOCATION": [(43, 52)],
                "PERSON": [(0, 16), (65, 85)]
            },
            {
                "ORG": [(84, 140), (620, 626)],
                "LOCATION": [(65, 71), (212, 229), (232, 253), (291, 301)],
                "PERSON": [(576, 605), (628, 645)]
            },
            {
                "LOCATION": [(153, 164), (290, 298)],
                "PERSON": [(925, 941)]
            },
            {
                "ORG": [(201, 243), (246, 249), (265, 276)],
                "PERSON": [(72, 90), (173, 184)]
            },
            {
                "LOCATION": [(42, 59), (68, 79), (123, 131), (142, 160)],
                "ORG": [(98, 121)]
            }
        ]
        X_loaded, y_loaded = load_dataset_from_json(file_name)
        self.assertIsInstance(X_loaded, list)
        self.assertIsInstance(y_loaded, list)
        self.assertEqual(len(X_true), len(X_loaded))
        self.assertEqual(len(y_true), len(y_loaded))
        for sample_idx in range(len(X_true)):
            self.assertEqual(X_true[sample_idx], X_loaded[sample_idx])
            self.assertIsInstance(y_loaded[sample_idx], dict)
            self.assertEqual(set(y_true[sample_idx]), set(y_loaded[sample_idx]))
            for ne_type in y_true[sample_idx]:
                self.assertIsInstance(y_loaded[sample_idx][ne_type], list)
                self.assertEqual(len(y_true[sample_idx][ne_type]), len(y_loaded[sample_idx][ne_type]))
                for entity_idx in range(len(y_true[sample_idx][ne_type])):
                    self.assertEqual(y_true[sample_idx][ne_type][entity_idx], y_loaded[sample_idx][ne_type][entity_idx])

    def test_load_dataset_from_json_positive02(self):
        base_dir = os.path.join(os.path.dirname(__file__), 'testdata')
        file_name = os.path.join(base_dir, 'dataset_without_paragraphs.json')
        X_true = [
            'Александр Вертинский. «Я не знаю, зачем и кому это нужно…»',
            '21 марта 1889 года родился главный русский шансонье XX века, печальный Пьеро, вписавший свою судьбу в '
            'историю отечественной культуры',
            'Жизнь с самого начала оставляла для Александра Вертинского слишком много вопросов без ответов. Слишком '
            'много «пустого» пространства. И он научился заполнять его вымыслом. Создал собственный театр с безумным '
            'множеством персонажей, каждый из которых — от сироток-калек и безымянных кокаинеточек до гениальных '
            'скрипачей и кинодив — был им самим.',
            'Трехкомнатная квартира на последнем этаже дома на углу Тверской и Козицкого переулка в Москве и сегодня '
            'выглядит так, словно ее хозяин вот-вот вернется. В просторном кабинете все те же большие книжные шкафы, '
            'все тот же гигантский письменный стол с наполеоновским вензелем и бюстом Вольтера.',
            'Сейчас в кабинете все чаще бывает лишь вдова Вертинского. Вновь и вновь перечитывает его письма, '
            'рукописи. Он смотрит на нее с фотографий, развешанных на стенах, расставленных на столе, и словно '
            'возвращает в те пятнадцать лет неизбывного счастья, когда по квартире витает запах табака и лаванды, дом '
            'полон гостей и шумные застолья длятся допоздна. И все это — будто здесь и сейчас. Нет, время не '
            'остановилось, оно сомкнуло объятия, чтобы вновь и вновь перечитывать эту странную, загадочную судьбу.',
            'Считается, что свой голос Георгий Иванов обрёл в эмиграции и благодаря эмиграции. Мол, утрата родины '
            'стала для него тем «простым человеческим горем», которого так не хватало по форме безупречным его стихам, '
            'чтобы они наполнились содержанием. На самом деле это не совсем так, потому что точка сборки Георгия '
            'Иванова была смещена ещё в Петербурге.',
            'Георгий Иванов. На грани музыки и сна',
            'Первое детское воспоминание Вертинского — о смерти матери. Трехлетний Саша сидит на горшке и выковыривает '
            'глаза у плюшевого медвежонка. Горничная Лизка отрывает мальчика от увлекательного занятия: «Вставай, твоя '
            'мама умерла!» Мать лежит в серебристом гробу на столе, тело ее скрывают цветы; у изголовья стоят '
            'серебряные подсвечники и маленькая табуретка. В руке Саша сжимает шоколадку, он бросается к матери, чтобы '
            'угостить. Но мать не раскрывает рта…',
            'Через два года от чахотки умер отец. Однажды ранней весной его нашли без чувств на могиле супруги. '
            'Оправиться от болезни он уже не смог. Когда кровь хлынула горлом, рядом с ним была только десятилетняя '
            'дочь Надя, не знавшая, как помочь. Обессиленный отец упал на подушку и захлебнулся кровью.',
            'Старшая сестра матери забрала Надю к себе в Ковно. Саша остался жить в Киеве с другой сестрой матери, '
            'которая уверила мальчика в том, что его сестра умерла. То же самое было сказано Наде о брате. Спустя годы '
            'Александр случайно обнаружит упоминание о Н. Н. Вертинской в журнале «Театр и искусство», напишет ей, и '
            'выяснится, что это его сестра. Во время Первой мировой Вертинскому сообщат, что Надя покончила с собой. '
            'Только после смерти Вертинского его вдова выяснит, что Надежда Николаевна живет в Ленинграде.',
            'Смерть причудливо и неотвратимо вписалась в его жизнь. Смерть была тем миром, где кончались тщета '
            'мальчика Мая и тревоги Безноженьки и наступал долгожданный покой.',
            'Александр Вертинский появился на свет «незаконнорожденным». Родственники отца и матери не одобряли союз '
            'Николая Вертинского с Евгенией Скалацкой (Сколацкой) даже тогда, когда родились Надя и Саша. Евгения '
            'Степановна происходила из дворянского рода, а Николай Петрович был присяжным поверенным. Первая жена отца '
            'по настоянию родственников Николая Вертинского не давала ему развода. Так что пришлось усыновить '
            'собственных детей.',
            'Жизнь с самого начала оставляла для Александра Вертинского слишком много вопросов без ответов. Слишком '
            'много «пустого» пространства. И он научился заполнять его вымыслом. Создал собственный театр с безумным '
            'множеством персонажей, каждый из которых — от сироток-калек и безымянных кокаинеточек до гениальных '
            'скрипачей и кинодив — был им самим.',
            'Театр стал маниакальной страстью Вертинского еще с гимназических лет. Он любыми способами проникал на '
            'спектакли, оперы, концерты, выступал в любительских постановках в контрактовом зале на киевском Подоле и '
            'подвизался статистом в Соловцовском театре — разумеется, бесплатно. А чтобы не умереть с голоду, брался '
            'за любую работу — пописывал рецензии на выступления гастролеров, служил корректором в типографии, '
            'нанимался помощником бухгалтера в гостиницу, продавал открытки, грузил арбузы на барках и даже '
            'подворовывал у двоюродной сестры безделушки, чтобы сбыть их на толкучке.',
            'С армией Колчака бежала из Владивостока семья цыган Димитриевичей, на пароходах генерала Врангеля '
            'спасались Александр Вертинский и Надежда Плевицкая, уходили куда угодно, лишь бы подальше от Советов, '
            'многие звёзды и звёздочки... Да, в первой эмиграции оказалось немало творческих личностей, работавших в '
            'интересующем нас жанре русской песни, но даже самые яркие их имена блекнут рядом со сверкающей снежной '
            'шапкой Монблана в лице Фёдора Ивановича Шаляпина.',
            'Живой бог русской музыки',
            'В 1911–1912 годах журналы «Киевская неделя» и «Лукоморье» опубликовали первые рассказы Вертинского: '
            '«Красные бабочки» и «Моя невеста» — декадентские, но с бунинской интонацией. «Красные бабочки» — о '
            'мальчике-сироте, случайно погубившем красных бабочек, вышитых на черном платье. Мальчик наказан суровой '
            'теткой, но бабочки являются ему во сне, чтобы отомстить за погибших сестер. «Моя невеста» — о сумасшедшей '
            'бездомной, читающей стихи на эстраде опустевшего осеннего парка. Эта «светлая малютка-невеста» при '
            'ближайшем рассмотрении оказывается «маленьким уродливым существом» с «длинным, острым, серо-зеленого '
            'цвета лицом», «черно-синими припухшими губами», «без бровей, без ресниц, с глубоко вдавленными в череп '
            'глазами».',
            'Свободное от литературных посиделок и работы время Вертинский коротал с киевской богемной молодежью в '
            'подвальном кабачке, закусывая дешевое вино дешевым сыром. В приобретенном на толкучке подержанном фраке, '
            'всегда с живым цветком в петлице, всегда презрительный и надменный, он сыпал заранее продуманными '
            'афоризмами и производил на окружающих впечатление большого оригинала. Но прекрасно понимал, что вечно так '
            'продолжаться не может.',
            'Скопив 25 рублей и подыскав компаньона с театральным гардеробчиком (без собственных костюмов в театрах '
            'тогда статистов не брали), Вертинский подался в Москву.',
            'Здесь он играл небольшие роли в любительских студиях, поступил в театр миниатюр Марьи Арцыбушевой, где '
            'служил за котлеты и борщ, соглашался на любые роли в кино, показывался во МХАТе — но из-за своего '
            'грассирующего «р» был отвергнут Станиславским.',
            'А внутри бурлило и клокотало, требовало выхода и не находило его. Слишком много вокруг было никому '
            'неизвестных талантов и знаменитых бездарностей. Столицы захлестнула эпидемия увлечения кокаином. Его '
            'покупали сначала в аптеках, затем с рук, носили в пудреницах и портсигарах, щедро одалживали и '
            'одалживались. Однажды выглянув из выходившего на крышу окна мансарды, которую Вертинский снимал, он '
            'обнаружил, что весь скат усеян пустыми коричневыми бутылочками из-под кокаина.',
            'Вертинский отправился к психиатру, профессору Баженову, и, подойдя к трамвайной остановке, увидел, как '
            'Пушкин сошел со своего пьедестала, оставив на нем четкий след. Александр Сергеевич сел вместе с '
            'Вертинским в трамвай и достал большой старинный медный пятак — для оплаты.',
            'Справиться с пристрастием к кокаину Вертинскому помогла война. Под именем Брат Пьеро он записался в '
            'санитарный поезд, курсировавший от Москвы к фронту и обратно. Почти два года Вертинский перевязывал '
            'раненых, читал им письма от родных, пел и даже, по его уверению, оперировал.',
            'В 1915 году Вертинский вернулся в театр миниатюр Арцыбушевой с собственным номером — «Ариетки Пьеро». На '
            'фоне черного занавеса в лунном луче прожектора на сцене появлялся высокий молодой человек. На его густо '
            'покрытом белилами лице резко выделялись ярко-красный рот, обведенные тушью большие глаза и печально '
            'вздернутые нарисованные брови. После вступления рояля этот странный юноша взмахивал руками и тихо '
            'начинал:',
            'Я люблю Вас, моя сегоглазочка, Золотая ошибка моя! Вы — вечегняя жуткая сказочка, Вы — цветок из кагтины '
            'Гойя.',
            'После бесконечных ямщиков и соловьев, аллей и ночей, дышащих сладострастьем, с одной стороны, а с другой '
            'с другой — на фоне бравад футуристов, претенциозных поэз Игоря Северянина и одесской шансоньетки Изы '
            'Кремер с ее занзибарами-кларами, — печальный Пьеро Вертинского стал сенсацией. Ему удалось невозможное: '
            'вписать богемную экзотику — всех этих маленьких креольчиков, смуглых принцев с Антильских островов, '
            'китайчат Ли, лиловых негров — в живописный ландшафт одинокой и беззащитной души; превратить ироничную '
            'игру культурными символами в откровение глубокой печали.',
            'Так певец без выдающихся вокальных данных, композитор, не знавший нотной грамоты, актер с дефектом дикции '
            'стал всероссийским кумиром. Издательство «Прогрессивные новости» Б. Андржеевского огромными тиражами '
            'выпускало «Песенки Вертинского», которые впечатлительные курсистки развозили по всей стране.',
            'Начались гастроли и бенефисы, от восторженной и возмущенной публики нередко приходилось спасаться через '
            'черный ход. Посыпались приглашения в кино. Популярность Вертинского была столь велика, что в феврале 1917 '
            'года Александра Керенского называли «печальным Пьеро российской революции».',
            'Как и подавляющее большинство представителей русской интеллигенции, Вертинский связывал с Февральской '
            'революцией опьяняющие надежды на обновление и очищение. Октябрьский переворот заставил протрезветь. Под '
            'впечатлением гибели московских юнкеров, убитых большевиками, Вертинский написал знаменитых «Юнкеров»:',
            'Я не знаю, зачем и кому это нужно, Кто послал их на смерть недрожавшей рукой, Только так беспощадно, так '
            'зло и ненужно Опустили их в вечный покой.',
            'Песня стала настоящим белогвардейским гимном — с нею шли в бой и умирали русские офицеры и юнкера. '
            'Существует легенда, что Вертинского вызывали в ЧК для дачи объяснений по поводу контрреволюционной песни. '
            'Артист возмутился: «Но вы же не можете запретить мне их жалеть!» И в ответ услышал: «Дышать запретим, '
            'если потребуется».',
            'Как и многие эпизоды из жизни Вертинского, допрос в ЧК не имеет документальных подтверждений. Тем не '
            'менее факт остается фактом: вслед за отступающей белой армией, как и многие российские артисты, '
            'Вертинский подался на юг, где все еще верили в счастливую развязку и мучились тяжелым предчувствием, что '
            'ее никогда не будет.',
            'В 1920 году на пароходе «Великий князь Александр Михайлович», увозящем барона Врангеля, Вертинский '
            'покинул Россию, отправившись в добровольное изгнание на 23 года.',
            'Его одиссея началась с Константинополя, где он пел разноязыким эмигрантам цыганские романсы и раздобыл '
            'греческий паспорт на имя Александра Вертидиса. Закружилась круговерть авантюр, лиц, городов, стран. '
            'Румыния, Польша, Германия, Австрия, Венгрия, Палестина, Египет, Ливия, Франция, США… Выступления в '
            'ресторанах и кабаках — между горячим и десертом; в мюзик-холлах и фешенебельных отелях — для королей '
            'Густава Шведского, Альфонса Испанского, принца Уэльского, для Вандербильтов и Ротшильдов.',
            'В Бессарабии его арестовали по обвинению в просоветской пропаганде песней «В степи молдаванской» — в '
            'особенности строками «О, как сладко, как больно сквозь слезы / Хоть взглянуть на родную страну…» '
            'Естественно, в деятельности Вертинского усмотрели происки НКВД. С тех пор слава чекистского агента '
            'бросает тень на его репутацию по сей день — как будто агент НКВД не может быть великим артистом…',
            'Все двадцать с лишним лет, где бы Вертинский ни выступал, он пел только на русском (исключение делал лишь '
            'для любимой Франции, где исполнял несколько своих песенок по-французски). Его основной аудиторией, '
            'конечно же, была русская эмиграция, для которой печальный Пьеро являлся не просто символом утраченной '
            'России, но, по выражению Шаляпина, «сказителем земли русской».',
            'Уже с начала 1920-х Вертинский просил разрешения вернуться — через советское консульство, через Анатолия '
            'Луначарского, возглавившего советскую делегацию в Берлине, — но неизменно получал отказ.',
            'В конце 1935 года он приехал в Китай — в Шанхае и Харбине была довольно обширная русская община. В Шанхае '
            'артист дал двадцать аншлаговых концертов (даже Шаляпину здесь сумели организовать только два '
            'выступления), однако бесконечно петь для одной и той же аудитории невозможно, и Вертинский намеревался '
            'через какое-то время вернуться в Европу. Но в 1937 году его вдруг пригласили в СССР — без всяких просьб '
            'со стороны артиста. Вертинский остался в Китае, ожидая, когда организуют возвращение. Он ждал пять лет.',
            'Что побудило Сталина позвать Вертинского? Рассказывали, что генералиссимус любил слушать ариетки Брата '
            'Пьеро в часы отдыха — особенно песню «В синем и далеком океане». Легенда приписывает также Сталину '
            'известную фразу «Дадим артисту Вертинскому спокойно дожить на Родине», произнесенную после того, как '
            '«отец всех народов» лично вычеркнул артиста из ждановского постановления, громившего Дмитрия Шостаковича '
            'и Сергея Прокофьева. Нравился Сталину Вертинский или нет, несомненно одно — возвращение «соловья '
            'белоэмиграции», мировой знаменитости было идеологически выгодно советскому режиму, тем более в 1943 году, '
            'когда открылся союзный фронт и в стране бродили оттепельные настроения.',
            'Вертинский же всегда и всем говорил о том, что возвращается, чтобы «рассказать о страданиях эмиграции» и '
            '«помирить Родину с ней». «Шанхайская Тэффи» Наталия Ильина не преминула по этому поводу съязвить в '
            'автобиографическом романе «Возвращение». Ее Джордж Эрмин (Георгий Еремин), подозрительно похожий на '
            'Вертинского, прочитав Конституцию СССР, перекрестился и изрек: «Я подумал, что же это — Китеж, '
            'воскресающий без нас!»',
            'Ранним утром 4 ноября 1943 года на пароходе «Дайрен-Мару» Вертинский покинул Шанхай. С ним были его '
            'двадцатилетняя жена Лидия и ее мать, на руках он держал трехмесячную дочь Марианну. Необходимость '
            'содержать семью была не самой последней причиной переезда в СССР. Шла война, зверствовала инфляция, '
            'иностранные конторы в Китае закрывались, русские эмигранты спасались от японской оккупации. Выступать '
            'становилось все труднее. Вертинский пускался в рискованные финансовые авантюры, не имевшие успеха. Его '
            'самой удачной коммерческой операцией была закупка пяти бутылей водки накануне рождения ребенка. Продав '
            'их после повышения цен, Вертинский оплатил счета за услуги роддома.',
            'Первым советским городом на их пути стала Чита. Стоял жуткий мороз, семью Вертинского поселили в '
            'гостинице, где практически не топили, а по стенам ползали клопы. А в местной филармонии артиста уже '
            'поджидала телеграмма из Москвы с распоряжением дать в Чите несколько концертов. Родина встречала блудного '
            'сына.',
            'О его возвращении ходили анекдоты. В одном из них рассказывалось, как Вертинский, приехав в СССР, выходит '
            'из вагона с двумя чемоданами, ставит их, целует землю и смотрит вокруг: «Не узнаю тебя, Россия!» '
            'Обернувшись, обнаруживает, что чемоданов нет. «Узнаю тебя, Россия!» — восклицает артист. В другом '
            'повествовалось о приеме, устроенном в честь Вертинского «пролетарским графом» Алексеем Николаевичем '
            'Толстым. Гости долго томятся, ожидая, когда их пригласят к столу. Кто-то из присутствующих, оглядев '
            'собравшееся общество — граф Толстой, граф Игнатьев, митрополит Николай Крутицкий, Александр Вертинский, —'
            ' спрашивает: «Кого ждем?» Остроумец-куплетист Смирнов-Сокольский отвечает: «Государя!»',
            'Первой советской киноролью Вертинского стал кардинал Бирнч в фильме Михаила Калатозова «Заговор '
            'обреченных». Актер сыграл изысканного, сладкоречивого патриция со следами былого донжуанства. Так и '
            'должен выглядеть настоящий враг советского режима — образованный, воспитанный, обвораживающий своим '
            'лоском. Только такие и могут строить заговоры и вынашивать планы государственного переворота. Сталинская '
            'премия за роль кардинала свидетельствовала о высочайшем одобрении этой трактовки.',
            'Такого же двуликого Януса Вертинский исполнил в помпезном фильме Сергея Юткевича «Великий воин '
            'Скандербег». Возможно, он играл бы маскирующихся иродов и дальше, если бы Исидор Анненский не предложил '
            'ему роль князя в экранизации чеховской «Анны на шее». Одним своим появлением на экране Вертинский, этот '
            'обломок царской России, воскрешал шик дворянских собраний и балов при дворе.',
            'Положение «советского артиста» Вертинского было довольно странным. С одной стороны, явное благоволение '
            'властей: его с семьей поселили в «Метрополе», затем выделили квартиру, наградили высшей государственной '
            'премией. Правда, семья в течение трех лет обитала в «Метрополе» не от хорошей жизни. Съехать было просто '
            'некуда, потому что выделенная квартира находилась на первом этаже двухэтажного дома на Хорошевском шоссе. '
            'Артист опасался поселяться в ней и с помощью сложных маневров обменял ее на квартиру на улице Горького, '
            'которая была в таком жутком состоянии, что нуждалась в капитальном ремонте. Опасения Вертинского, как '
            'выяснилось позже, были не напрасны — квартира на Хорошевском шоссе подверглась налету знаменитой «Черной '
            'кошки».',
            'С другой стороны, из ста с лишним песен к исполнению было разрешено не более тридцати (авторство текстов '
            'Георгия Иванова и Николая Гумилева Вертинскому пришлось приписать себе), единственная прижизненная '
            'пластинка вышла в 1944 году, о концертах — ни строчки в прессе. «Я существую на правах публичного дома, —'
            ' горько шутил Вертинский, — все ходят, но в обществе говорить об этом не принято».',
            'Из эмиграции Вертинский вернулся практически с пустыми карманами, вскоре родилась вторая дочь, Настя. '
            'Гастрольбюро обеспечило артисту по 20–25 концертов в месяц по всей стране от Средней Азии до Дальнего '
            'Востока — в нетопленных, неприспособленных для выступлений залах с расстроенными роялями и пьяной '
            'публикой. Но концертная жизнь в европейских кабаках приучила его работать в любых условиях.',
            'Платили Вертинскому по самому низкому тарифу, поскольку у него не было никаких званий. За концерт артист '
            'получал около 800 рублей, при этом его выступления всегда проходили при аншлагах и собирали десятки тысяч '
            'рублей. Приходилось соглашаться на все, давать левые концерты, выкручиваться, объясняться… Вместе с '
            'аккомпаниатором Михаилом Брохесом он вдоль и поперек исколесил всю страну по нескольку раз, дав около '
            'трех тысяч концертов. Написал два десятка стихов, работал над мемуарами, которые не успел закончить. 14 '
            'лет на Родине превратили бодрого, моложавого мужчину в глубокого старика.',
            'Он не хотел умереть дома, не желал, чтобы родные видели «кухню смерти». 21 мая 1957 года Вертинский '
            'готовился к концерту в Ленинграде, был сдержан и немногословен. Он находился в своем 208-м номере '
            '«Астории», когда начался сердечный приступ. Лекарства под рукой не оказалось. Как выяснилось позже — оно '
            'бы уже не помогло. При вскрытии сосуды рассыпались, как хрупкое стекло',
            'Назначен куратор строительства российской Кремниевой долины',
            'Дмитрий Медведев доверил пост руководителя иннограда миллиардеру Виктору Вексельбергу.',
            'Всё меньше остаётся нерешённых вопросов, касающихся возведения в России уникального Центра по разработке '
            'и коммерциализации новых технологий. Власти уже не только выбрали площадку для строительства '
            'отечественной Кремниевой долины в подмосковном Сколково, а также частично одобрили концепцию наукограда, '
            'но и определили куратора большой инновационной стройки. «Были проведены определённые консультации по '
            'поводу того, кто конкретно мог бы осуществлять такого рода работу. Мною принято решение, что российскую '
            'часть этой координирующей структуры, которую мы создадим, возглавит Виктор Феликсович Вексельберг», — '
            'цитирует «Взгляд» Дмитрия Медведева.',
            'Исходя из заявления президента, понятно, что у проекта будут не только российские инвесторы, но и '
            'иностранные партнёры, в числе которых, по словам главы государства, будут и представители иностранных '
            'научных кругов. Именно на базе взаимодействия науки и бизнеса должен появиться и работать инноград. «Всё '
            'это затеяли не ради того, чтобы построить определённое количество коттеджей или же создать там нормальные '
            'производственные условия, лаборатории. Это всё важно, но это всё инфраструктура. Самое главное, чтобы '
            'там появились люди. Для того чтобы люди появились, должна быть внятная система управления. Эта система '
            'управления зависит от нас. Я думаю, что с учётом масштабности этого проекта, а с другой стороны, того, '
            'что в реализации этого проекта должны быть заинтересованы не только государственные структуры, но, '
            'прежде всего, российский бизнес, я считаю, что координацией российский бизнес и мог бы заняться», — '
            'заявил Дмитрий Медведев.',
            'Это выступление президента вполне объясняет выбор руководителя проекта. Виктор Вексельберг — бизнесмен с '
            '30-летним стажем, капитал которого оценивается в 6,4 млрд долларов. Вексельберг является главой правления '
            'ОАО «Тюменская нефтяная компания» (ТНК) и президентом ЗАО «Ренова». Именно он является владельцем '
            'значительной части российского титана и алюминиевого бизнеса.',
            'О том, почему площадкой для строительства Кремниевой долины выбрано Подмосковье, читайте в статье '
            'Частного корреспондента «Сколково назначили Кремниевой долиной»'
        ]
        y_true = [
            {
                "PERSON": [(0, 20)]
            },
            {
                "PERSON": [(71, 76)]
            },
            {
                "PERSON": [(36, 58)]
            },
            {
                "LOCATION": [(55, 63), (66, 84), (87, 93)],
                "PERSON": [(281, 289)]
            },
            {
                "PERSON": [(45, 56)]
            },
            {
                "LOCATION": [(334, 344)],
                "PERSON": [(26, 40), (299, 314)]
            },
            {
                "PERSON": [(0, 14)]
            },
            {
                "PERSON": [(28, 39), (70, 74), (146, 151), (362, 366)]
            },
            {
                "PERSON": [(207, 211)]
            },
            {
                "PERSON": [(30, 34), (51, 55), (182, 186), (208, 217), (250, 266), (367, 378), (392, 396), (436, 447),
                           (471, 489)],
                "LOCATION": [(44, 49), (71, 76), (498, 508)],
                "ORG": [(269, 295)]
            },
            {
                "PERSON": [(107, 110), (121, 132)]
            },
            {
                "PERSON": [(0, 20), (104, 123), (126, 144), (146, 155), (184, 188), (191, 195), (197, 215), (251, 267),
                           (338, 357)]
            },
            {
                "PERSON": [(36, 58)]
            },
            {
                "PERSON": [(33, 44)],
                "LOCATION": [(168, 185), (189, 197), (198, 204)],
                "ORG": [(230, 249)]
            },
            {
                "PERSON": [(9, 16), (89, 97), (108, 128), (131, 148), (430, 455)],
                "LOCATION": [(27, 39), (191, 198), (414, 422)],
                "ORG": [(2, 16)]
            },
            dict(),
            {
                "PERSON": [(87, 98)],
                "ORG": [(18, 56)]
            },
            {
                "LOCATION": [(72, 80)],
                "PERSON": [(51, 61)]
            },
            {
                "LOCATION": [(151, 157)],
                "PERSON": [(130, 140)]
            },
            {
                "PERSON": [(80, 97), (233, 246)],
                "ORG": [(65, 97), (177, 182)]
            },
            {
                "PERSON": [(373, 383)]
            },
            {
                "PERSON": [(0, 10), (46, 54), (103, 109), (166, 185), (199, 209)]
            },
            {
                "LOCATION": [(135, 141)],
                "PERSON": [(36, 47), (79, 84), (177, 187)]
            },
            {
                "PERSON": [(12, 22), (49, 60), (94, 99)],
                "ORG": [(34, 60)]
            },
            {
                "PERSON": [(105, 109)]
            },
            {
                "LOCATION": [(389, 408)],
                "PERSON": [(162, 178), (202, 212), (251, 256), (257, 268)]
            },
            {
                "PERSON": [(171, 187), (226, 237)],
                "ORG": [(134, 169)]
            },
            {
                "PERSON": [(160, 171), (215, 236), (257, 262)]
            },
            {
                "PERSON": [(68, 78), (267, 277)]
            },
            dict(),
            {
                "PERSON": [(123, 134)],
                "ORG": [(146, 148)]
            },
            {
                "PERSON": [(30, 41), (197, 207)],
                "ORG": [(52, 54)]
            },
            {
                "LOCATION": [(107, 113)],
                "PERSON": [(39, 59), (78, 86), (88, 98)]
            },
            {
                "LOCATION": [(23, 38), (203, 210), (212, 218), (220, 228), (230, 237), (239, 246), (248, 257),
                             (259, 265), (267, 272), (274, 281), (283, 286)],
                "PERSON": [(128, 148), (403, 420), (422, 441), (450, 459)]
            },
            {
                "PERSON": [(226, 237)],
                "LOCATION": [(2, 12)],
                "ORG": [(256, 260), (357, 361)]
            },
            {
                "LOCATION": [(118, 125), (307, 313)],
                "PERSON": [(34, 44), (263, 268), (332, 340)]
            },
            {
                "PERSON": [(20, 30), (96, 117)],
                "LOCATION": [(155, 162)],
                "ORG": [(67, 88), (133, 152)]
            },
            {
                "LOCATION": [(31, 36), (41, 47), (50, 57), (99, 105), (335, 341), (381, 385), (447, 452)],
                "PERSON": [(153, 161), (279, 289), (426, 436)]
            },
            {
                "PERSON": [(13, 20), (29, 40), (103, 108), (194, 201), (233, 244), (388, 407), (410, 427), (438, 445),
                           (446, 456)]
            },
            {
                "LOCATION": [(338, 342), (392, 397)],
                "PERSON": [(0, 10), (142, 147), (149, 163), (248, 260), (262, 276), (304, 315)]
            },
            {
                "LOCATION": [(45, 51), (52, 56), (77, 83), (258, 262), (320, 325)],
                "PERSON": [(58, 68), (120, 125), (174, 182), (425, 435), (630, 640)]
            },
            {
                "LOCATION": [(42, 46), (221, 227), (251, 255)],
                "PERSON": [(74, 85)]
            },
            {
                "LOCATION": [(92, 96), (194, 200), (262, 268)],
                "PERSON": [(70, 80), (345, 356), (379, 408), (529, 536), (543, 551), (564, 581), (583, 603), (652, 670)]
            },
            {
                "PERSON": [(27, 38), (53, 58), (68, 86)]
            },
            {
                "LOCATION": [(319, 325)],
                "PERSON": [(20, 25), (26, 36), (65, 80), (95, 105), (169, 185), (239, 243), (286, 296)]
            },
            {
                "PERSON": [(31, 42), (607, 618)],
                "LOCATION": [(137, 146), (260, 269), (399, 416), (506, 520), (673, 690)],
                "ORG": [(722, 734)]
            },
            {
                "PERSON": [(105, 120), (123, 139), (140, 151), (323, 333)]
            },
            {
                "PERSON": [(13, 23), (95, 100)],
                "LOCATION": [(179, 191), (195, 211)],
                "ORG": [(102, 114)]
            },
            {
                "PERSON": [(8, 19), (327, 344)]
            },
            {
                "LOCATION": [(123, 133), (199, 206)],
                "PERSON": [(89, 99)]
            },
            {
                "LOCATION": [(31, 59)]
            },
            {
                "LOCATION": [(43, 52)],
                "PERSON": [(0, 16), (65, 85)]
            },
            {
                "ORG": [(84, 140), (620, 626)],
                "LOCATION": [(65, 71), (212, 229), (232, 253), (291, 301)],
                "PERSON": [(576, 605), (628, 645)]
            },
            {
                "LOCATION": [(153, 164), (290, 298)],
                "PERSON": [(925, 941)]
            },
            {
                "ORG": [(201, 243), (246, 249), (265, 276)],
                "PERSON": [(72, 90), (173, 184)]
            },
            {
                "LOCATION": [(42, 59), (68, 79), (123, 131), (142, 160)],
                "ORG": [(98, 121)]
            }
        ]
        X_loaded, y_loaded = load_dataset_from_json(file_name)
        self.assertIsInstance(X_loaded, list)
        self.assertIsInstance(y_loaded, list)
        self.assertEqual(len(X_true), len(X_loaded))
        self.assertEqual(len(y_true), len(y_loaded))
        for sample_idx in range(len(X_true)):
            self.assertEqual(X_true[sample_idx], X_loaded[sample_idx])
            self.assertIsInstance(y_loaded[sample_idx], dict)
            self.assertEqual(set(y_true[sample_idx]), set(y_loaded[sample_idx]))
            for ne_type in y_true[sample_idx]:
                self.assertIsInstance(y_loaded[sample_idx][ne_type], list)
                self.assertEqual(len(y_true[sample_idx][ne_type]), len(y_loaded[sample_idx][ne_type]),
                                 msg='Sample {0}'.format(sample_idx))
                for entity_idx in range(len(y_true[sample_idx][ne_type])):
                    self.assertEqual(y_true[sample_idx][ne_type][entity_idx], y_loaded[sample_idx][ne_type][entity_idx])

    def test_load_dataset_from_brat_positive01(self):
        true_texts = [
            'Россия рассчитывает на конструктивное воздействие США на Грузию    04/08/2008 12:08    МОСКВА, 4 авг - '
            'РИА Новости. Россия рассчитывает, что США воздействуют на Тбилиси в связи с обострением ситуации в зоне '
            'грузино-осетинского конфликта. Об этом статс-секретарь - заместитель министра иностранных дел России '
            'Григорий Карасин заявил в телефонном разговоре с заместителем госсекретаря США Дэниэлом Фридом.    "С '
            'российской стороны выражена глубокая озабоченность в связи с новым витком напряженности вокруг Южной '
            'Осетии, противозаконными действиями грузинской стороны по наращиванию своих вооруженных сил в регионе, '
            'бесконтрольным строительством фортификационных сооружений", - говорится в сообщении.    "Россия уже '
            'призвала Тбилиси к ответственной линии и рассчитывает также на конструктивное воздействие со стороны '
            'Вашингтона", - сообщил МИД России. ',
            'Комиссар СЕ критикует ограничительную политику в отношении беженцев в европейских странах    05/08/2008 '
            '10:32    МОСКВА, 5 августа /Новости-Грузия/.  Проводимая в европейских странах ограничительная политика в '
            'отношении беженцев нарушает ряд международных стандартов, в частности, право на воссоединение семей, '
            'заявляет Комиссар Совета Европы по правам человека Томас Хаммарберг (Thomas Hammarberg) в размещенном на '
            'его сайте еженедельном комментарии.    "Ограничительная политика в отношении беженцев в европейских '
            'странах уменьшает возможности воссоединения разделенных семей", - полагает он.    По сообщению РИА '
            'Новости, Хаммарберг констатирует, что в последнее время "правительства попытались ограничить приезд '
            'близких родственников к тем беженцам, которые уже проживают в стране".    Комиссар не называет конкретных '
            'стран, одновременно отмечая, что в ряде случаев подобная линия привела "к неоправданным человеческим '
            'страданиям, когда члены семьи, зависящие друг от друга, оказались разделенными".    "Такая политика '
            'противоречит праву на воссоединение семей, как это предусмотрено некоторыми международными '
            'стандартами", - замечает он.    Комиссар Совета Европы призывает страны учитывать в политике, проводимой '
            'в отношении беженцев, положения о семье, принятые в рамках ООН и ЕС.',
            'Губернатор Ленобласти попросил прокуратуру оценить действия подследственного главы Токсово    '
            'Губернатор Ленинградской области Александр Дрозденко обратился в прокуратуру региона и следственное '
            'управление Следственного комитета РФ по Ленинградской области в связи с выходом на работу находящегося '
            'под следствием главы администрации Токсовского городского поселения Всеволожского района. Об обращении '
            'губернатора ИА REGNUM сообщили сегодня, 24 июля, в пресс-службе правительства Ленобласти.    '
            'Прокуратурой Ленинградской области утверждено и направлено в суд обвинительное заключение по уголовному '
            'делу в отношении главы администрации Токсовского городского поселения Всеволожского района Леонида '
            'Колесника, обвиняемого в совершении преступления, предусмотренного ч. 3 ст 30, ч. 3 ст 159 Уголовного '
            'кодекса России (покушение на мошенничество, совершенное с использованием служебного положения, в крупном '
            'размере). По имеющейся информации, 22 июля Леонид Колесник вышел на работу и приступил к исполнению '
            'обязанностей главы администрации муниципального образования.    В письмах, направленных сегодня в '
            'адрес прокурора Ленинградской области Германа Штадлера и Руководителя Следственного управления '
            'Следственного комитета РФ по Ленинградской области Владимира Лоскутова, губернатор Александр Дрозденко '
            'просит дать правовую оценку по факту исполнения Колесником своих должностных обязанностей до вынесения '
            'судебного решения по уголовному делу.    Как ранее сообщало ИА REGNUM, по версии следствия, Колесник '
            'договорился с неким гражданином об оказании содействия в назначении его на должность директора '
            'муниципального унитарного предприятия "Ритуальные услуги" за взятку в размере 1 миллиона рублей. В '
            'качестве посредника при передаче требуемой суммы выступил знакомый чиновника. 13 февраля 2013 года в '
            'помещении кафе "Визит", расположенном в Ломоносовском районе Ленинградской области, посредник получил '
            'требуемую сумму денег для последующей передачи Колеснику, после чего был задержан сотрудниками '
            'правоохранительных органов.',
            'Джабраилов отдал долг родине    Вчера Совет Федерации принял добровольную отставку сенатора от Чечни '
            'Умара Джабраилова. Известный столичный бизнесмен, светский сердцеед и экс-кандидат в президенты России '
            'намерен попробовать себя в исполнительной власти — на внешнеполитическом поприще. Кресло Джабраилова в '
            'сенате может занять его земляк, экс-супруг Кристины Орбакайте Руслан Байсаров.    Пять лет '
            'сенаторства утомили бывшего президента группы Plaza Умара Джабраилова. «Я исчерпал себя на этой '
            'должности, — пояснил он РБК daily мотивы своей досрочной отставки. — Не хочу умалять полномочия сената, '
            'но я сделал там все, что мог, отдал долг большой и малой родине. А теперь хочу попробовать себя на другом '
            'поприще». Решение покинуть сенат было согласовано с президентом Чечни Рамзаном Кадыровым еще в июле, '
            'признались в республиканском правительстве.    Тогда же заявление о досрочной отставке легло на стол '
            'главы Совфеда Сергея Миронова. Возвращаться в столичный девелоперский бизнес в это непростое время бывший '
            'сенатор не намерен. «Если родина сочтет нужным, я еще лет десять посвящу себя активной политической '
            'деятельности, — заявил он. — Я намерен продолжить работу на федеральном уровне, но не в законодательной, '
            'а в исполнительной власти. Технические договоренности уже есть, речь идет о внешнеполитической '
            'деятельности». В МИДе не обладают информацией о возможном приходе г-на Джабраилова. В сенате Умар '
            'Джабраилов был зампредом комитета по международным делам.    В Чечне поговаривают, что досрочная '
            'отставка Джабраилова из сената, где он представлял исполнительную власть республики, продиктована '
            'похолоданием его отношений с Рамзаном Кадыровым. «До какого-то момента они работали одной командой, — '
            'вспоминает один из бывших депутатов чеченского парламента. — Именно Джабраилов в ноябре 2006 года первым '
            'озвучил мысль, давно зревшую в окружении Кадырова: официально предложил тогдашнему президенту республики '
            'Алу Алханову уйти в отставку». Однако в последнее время в окружении Кадырова укрепилась мысль, что '
            'Джабраилов помогает малой родине в меньших объемах, чем мог бы, поделился информацией экс-депутат.    '
            'Дальнейшие перспективы трудоустройства Джабраилова окружению президента Чечни неизвестны. «Надо исходить '
            'из того, что он москвич, — заявил РБК daily пресс-секретарь президента Чечни Альви Каримов. — Где же он '
            'может остаться, как не в Москве?»    Основным претендентом на сенаторское кресло Джабраилова в Чечне '
            'называют другого известного бизнесмена, экс-супруга Кристины Орбакайте Руслана Байсарова. На официальном '
            'уровне эту информацию не опровергают, но и не подтверждают. «Байсаров — видный представитель нашего '
            'народа, — говорит г-н Каримов. — Но ни одной фамилии Рамзан Кадыров пока не называл».    «Байсаров '
            'неплохой коммерсант, одержимый своим делом, — оценил персону своего возможного преемника Умар '
            'Джабраилов. — Могу лишь пожелать, чтобы он на посту сенатора был не хуже меня». '
        ]
        true_entities = [
            {
                'LOC': [(0, 6), (50, 53), (57, 63), (87, 93), (116, 122), (141, 144), (161, 168), (301, 307),
                        (383, 386), (505, 517), (703, 709), (723, 730), (815, 825), (842, 848)],
                'PER': [(308, 324), (387, 402)],
                'ORG': [(103, 114), (838, 841)]
            },
            {
                'LOC': [(113, 119), (1283, 1285)],
                'PER': [(362, 398), (624, 634)],
                'ORG': [(9, 11), (132, 146), (329, 342), (611, 622), (1154, 1167), (1277, 1280)]
            },
            {
                'LOC': [(11, 21), (83, 91), (105, 126), (228, 230), (234, 255), (332, 364), (365, 385), (478, 488),
                        (506, 527), (634, 666), (667, 687), (806, 812), (1117, 1138), (1219, 1221), (1225, 1246),
                        (1838, 1880)],
                'PER': [(127, 146), (688, 705), (946, 961), (1139, 1155), (1247, 1266), (1279, 1298), (1347, 1357),
                        (1494, 1502), (1947, 1956)],
                'ORG': [(205, 227), (412, 421), (1171, 1195), (1196, 1218), (1462, 1471), (1636, 1655), (1813, 1820)]
            },
            {
                'LOC': [(95, 100), (197, 203), (768, 773), (1473, 1478), (2190, 2195), (2294, 2299), (2352, 2358),
                        (2422, 2427)],
                'PER': [(0, 10), (101, 118), (293, 304), (350, 368), (369, 384), (450, 467), (774, 792), (920, 935),
                        (1383, 1394), (1405, 1420), (1516, 1527), (1634, 1652), (1775, 1785), (1853, 1861),
                        (1917, 1929), (1985, 1993), (2016, 2026), (2157, 2168), (2300, 2313), (2408, 2419),
                        (2480, 2498), (2499, 2516), (2594, 2602), (2655, 2662), (2686, 2700), (2723, 2731),
                        (2821, 2836)],
                'ORG': [(38, 53), (444, 449), (518, 527), (912, 919), (1329, 1333), (2257, 2266)]
            }
        ]
        loaded_texts, loaded_entities = load_dataset_from_brat(
            os.path.join(os.path.dirname(__file__), 'testdata', 'brat_data'),
            split_by_paragraphs=False
        )
        self.assertIsInstance(loaded_texts, list)
        self.assertIsInstance(loaded_entities, list)
        self.assertEqual(len(true_texts), len(loaded_texts))
        self.assertEqual(true_texts, loaded_texts)
        self.assertEqual(len(true_entities), len(loaded_entities))
        for sample_idx in range(len(true_entities)):
            self.assertIsInstance(loaded_entities[sample_idx], dict, msg='Sample {0}'.format(sample_idx))
            self.assertEqual(set(true_entities[sample_idx].keys()), set(loaded_entities[sample_idx].keys()),
                             msg='Sample {0}'.format(sample_idx))
            for ne_type in true_entities[sample_idx]:
                self.assertEqual(true_entities[sample_idx][ne_type], loaded_entities[sample_idx][ne_type],
                                 msg='Sample {0}'.format(sample_idx))

    def test_load_dataset_from_brat_positive02(self):
        true_texts = [
            'Россия рассчитывает на конструктивное воздействие США на Грузию',
            '04/08/2008 12:08',
            'МОСКВА, 4 авг - РИА Новости. Россия рассчитывает, что США воздействуют на Тбилиси в связи с обострением '
            'ситуации в зоне грузино-осетинского конфликта. Об этом статс-секретарь - заместитель министра иностранных '
            'дел России Григорий Карасин заявил в телефонном разговоре с заместителем госсекретаря США Дэниэлом '
            'Фридом.',
            '"С российской стороны выражена глубокая озабоченность в связи с новым витком напряженности вокруг Южной '
            'Осетии, противозаконными действиями грузинской стороны по наращиванию своих вооруженных сил в регионе, '
            'бесконтрольным строительством фортификационных сооружений", - говорится в сообщении.',
            '"Россия уже призвала Тбилиси к ответственной линии и рассчитывает также на конструктивное воздействие со '
            'стороны Вашингтона", - сообщил МИД России. ',
            'Комиссар СЕ критикует ограничительную политику в отношении беженцев в европейских странах',
            '05/08/2008 10:32',
            'МОСКВА, 5 августа /Новости-Грузия/.  Проводимая в европейских странах ограничительная политика в '
            'отношении беженцев нарушает ряд международных стандартов, в частности, право на воссоединение семей, '
            'заявляет Комиссар Совета Европы по правам человека Томас Хаммарберг (Thomas Hammarberg) в размещенном на '
            'его сайте еженедельном комментарии.',
            '"Ограничительная политика в отношении беженцев в европейских странах уменьшает возможности воссоединения '
            'разделенных семей", - полагает он.',
            'По сообщению РИА Новости, Хаммарберг констатирует, что в последнее время "правительства попытались '
            'ограничить приезд близких родственников к тем беженцам, которые уже проживают в стране".',
            'Комиссар не называет конкретных стран, одновременно отмечая, что в ряде случаев подобная линия привела "к '
            'неоправданным человеческим страданиям, когда члены семьи, зависящие друг от друга, оказались '
            'разделенными".',
            '"Такая политика противоречит праву на воссоединение семей, как это предусмотрено некоторыми '
            'международными стандартами", - замечает он.',
            'Комиссар Совета Европы призывает страны учитывать в политике, проводимой в отношении беженцев, положения '
            'о семье, принятые в рамках ООН и ЕС.',
            'Губернатор Ленобласти попросил прокуратуру оценить действия подследственного главы Токсово',
            'Губернатор Ленинградской области Александр Дрозденко обратился в прокуратуру региона и следственное '
            'управление Следственного комитета РФ по Ленинградской области в связи с выходом на работу находящегося '
            'под следствием главы администрации Токсовского городского поселения Всеволожского района. Об обращении '
            'губернатора ИА REGNUM сообщили сегодня, 24 июля, в пресс-службе правительства Ленобласти.',
            'Прокуратурой Ленинградской области утверждено и направлено в суд обвинительное заключение по уголовному '
            'делу в отношении главы администрации Токсовского городского поселения Всеволожского района Леонида '
            'Колесника, обвиняемого в совершении преступления, предусмотренного ч. 3 ст 30, ч. 3 ст 159 Уголовного '
            'кодекса России (покушение на мошенничество, совершенное с использованием служебного положения, в крупном '
            'размере). По имеющейся информации, 22 июля Леонид Колесник вышел на работу и приступил к исполнению '
            'обязанностей главы администрации муниципального образования.',
            'В письмах, направленных сегодня в адрес прокурора Ленинградской области Германа Штадлера и Руководителя '
            'Следственного управления Следственного комитета РФ по Ленинградской области Владимира Лоскутова, '
            'губернатор Александр Дрозденко просит дать правовую оценку по факту исполнения Колесником своих '
            'должностных обязанностей до вынесения судебного решения по уголовному делу.',
            'Как ранее сообщало ИА REGNUM, по версии следствия, Колесник договорился с неким гражданином об оказании '
            'содействия в назначении его на должность директора муниципального унитарного предприятия "Ритуальные '
            'услуги" за взятку в размере 1 миллиона рублей. В качестве посредника при передаче требуемой суммы '
            'выступил знакомый чиновника. 13 февраля 2013 года в помещении кафе "Визит", расположенном в '
            'Ломоносовском районе Ленинградской области, посредник получил требуемую сумму денег для последующей '
            'передачи Колеснику, после чего был задержан сотрудниками правоохранительных органов.',
            'Джабраилов отдал долг родине',
            'Вчера Совет Федерации принял добровольную отставку сенатора от Чечни Умара Джабраилова. Известный '
            'столичный бизнесмен, светский сердцеед и экс-кандидат в президенты России намерен попробовать себя в '
            'исполнительной власти — на внешнеполитическом поприще. Кресло Джабраилова в сенате может занять его '
            'земляк, экс-супруг Кристины Орбакайте Руслан Байсаров.',
            'Пять лет сенаторства утомили бывшего президента группы Plaza Умара Джабраилова. «Я исчерпал себя на этой '
            'должности, — пояснил он РБК daily мотивы своей досрочной отставки. — Не хочу умалять полномочия сената, '
            'но я сделал там все, что мог, отдал долг большой и малой родине. А теперь хочу попробовать себя на другом '
            'поприще». Решение покинуть сенат было согласовано с президентом Чечни Рамзаном Кадыровым еще в июле, '
            'признались в республиканском правительстве.',
            'Тогда же заявление о досрочной отставке легло на стол главы Совфеда Сергея Миронова. Возвращаться в '
            'столичный девелоперский бизнес в это непростое время бывший сенатор не намерен. «Если родина сочтет '
            'нужным, я еще лет десять посвящу себя активной политической деятельности, — заявил он. — Я намерен '
            'продолжить работу на федеральном уровне, но не в законодательной, а в исполнительной власти. Технические '
            'договоренности уже есть, речь идет о внешнеполитической деятельности». В МИДе не обладают информацией о '
            'возможном приходе г-на Джабраилова. В сенате Умар Джабраилов был зампредом комитета по международным '
            'делам.',
            'В Чечне поговаривают, что досрочная отставка Джабраилова из сената, где он представлял исполнительную '
            'власть республики, продиктована похолоданием его отношений с Рамзаном Кадыровым. «До какого-то момента '
            'они работали одной командой, — вспоминает один из бывших депутатов чеченского парламента. — Именно '
            'Джабраилов в ноябре 2006 года первым озвучил мысль, давно зревшую в окружении Кадырова: официально '
            'предложил тогдашнему президенту республики Алу Алханову уйти в отставку». Однако в последнее время в '
            'окружении Кадырова укрепилась мысль, что Джабраилов помогает малой родине в меньших объемах, чем мог бы, '
            'поделился информацией экс-депутат.',
            'Дальнейшие перспективы трудоустройства Джабраилова окружению президента Чечни неизвестны. «Надо исходить '
            'из того, что он москвич, — заявил РБК daily пресс-секретарь президента Чечни Альви Каримов. — Где же он '
            'может остаться, как не в Москве?»',
            'Основным претендентом на сенаторское кресло Джабраилова в Чечне называют другого известного бизнесмена, '
            'экс-супруга Кристины Орбакайте Руслана Байсарова. На официальном уровне эту информацию не опровергают, но '
            'и не подтверждают. «Байсаров — видный представитель нашего народа, — говорит г-н Каримов. — Но ни одной '
            'фамилии Рамзан Кадыров пока не называл».',
            '«Байсаров неплохой коммерсант, одержимый своим делом, — оценил персону своего возможного преемника Умар '
            'Джабраилов. — Могу лишь пожелать, чтобы он на посту сенатора был не хуже меня». '
        ]
        true_entities = [
            {
                'LOC': [(0, 6), (50, 53), (57, 63)]
            },
            dict(),
            {
                'PER': [(221, 237), (300, 315)],
                'LOC': [(0, 6), (29, 35), (54, 57), (74, 81), (214, 220), (296, 299)],
                'ORG': [(16, 27)]
            },
            {
                'LOC': [(98, 110)]
            },
            {
                'LOC': [(1, 7), (21, 28), (113, 123), (140, 146)],
                'ORG': [(136, 139)]
            },
            {
                'ORG': [(9, 11)]
            },
            dict(),
            {
                'LOC': [(0, 6)],
                'PER': [(249, 285)],
                'ORG': [(19, 33), (216, 229)]
            },
            dict(),
            {
                'PER': [(26, 36)],
                'ORG': [(13, 24)]
            },
            dict(),
            dict(),
            {
                'LOC': [(138, 140)],
                'ORG': [(9, 22), (132, 135)]
            },
            {
                'LOC': [(11, 21), (83, 90)]
            },
            {
                'LOC': [(11, 32), (134, 136), (140, 161), (238, 270), (271, 291), (384, 394)],
                'PER': [(33, 52)],
                'ORG': [(111, 133), (318, 327)]
            },
            {
                'LOC': [(13, 34), (141, 173), (174, 194), (313, 319)],
                'PER': [(195, 212), (453, 468)]
            },
            {
                'LOC': [(50, 71), (152, 154), (158, 179)],
                'ORG': [(104, 128), (129, 151)],
                'PER': [(72, 88), (180, 199), (212, 231), (280, 290)]
            },
            {
                'LOC': [(395, 437)],
                'ORG': [(19, 28), (193, 212), (370, 377)],
                'PER': [(51, 59), (504, 513)]
            },
            {
                'PER': [(0, 10)]
            },
            {
                'LOC': [(63, 68), (165, 171)],
                'PER': [(69, 86), (261, 272), (318, 336), (337, 352)],
                'ORG': [(6, 21)]
            },
            {
                'LOC': [(379, 384)],
                'PER': [(61, 78), (385, 403)],
                'ORG': [(55, 60), (129, 138)]
            },
            {
                'PER': [(68, 83), (531, 542), (553, 568)],
                'ORG': [(60, 67), (477, 481)]
            },
            {
                'LOC': [(2, 7)],
                'PER': [(45, 56), (163, 181), (304, 314), (382, 390), (446, 458), (514, 522), (545, 555)]
            },
            {
                'LOC': [(72, 77), (176, 181), (234, 240)],
                'PER': [(39, 50), (182, 195)],
                'ORG': [(139, 148)]
            },
            {
                'LOC': [(58, 63)],
                'PER': [(44, 55), (116, 134), (135, 152), (230, 238), (291, 298), (322, 336)]
            },
            {
                'PER': [(1, 9), (99, 114)]
            }
        ]
        loaded_texts, loaded_entities = load_dataset_from_brat(
            os.path.join(os.path.dirname(__file__), 'testdata', 'brat_data'),
            split_by_paragraphs=True
        )
        self.assertIsInstance(loaded_texts, list)
        self.assertIsInstance(loaded_entities, list)
        self.assertEqual(len(true_texts), len(loaded_texts))
        self.assertEqual(true_texts, loaded_texts)
        self.assertEqual(len(true_entities), len(loaded_entities))
        for sample_idx in range(len(true_entities)):
            self.assertIsInstance(loaded_entities[sample_idx], dict, msg='Sample {0}'.format(sample_idx))
            self.assertEqual(set(true_entities[sample_idx].keys()), set(loaded_entities[sample_idx].keys()),
                             msg='Sample {0}'.format(sample_idx))
            for ne_type in true_entities[sample_idx]:
                self.assertEqual(true_entities[sample_idx][ne_type], loaded_entities[sample_idx][ne_type],
                                 msg='Sample {0}'.format(sample_idx))

    def test_load_dataset_from_brat_negative01(self):
        brat_datadir_name = os.path.join(os.path.dirname(__file__), 'testdata')
        true_err_msg = re.escape('There are no annotation files into the directory `{0}`!'.format(brat_datadir_name))
        with self.assertRaisesRegex(ValueError, true_err_msg):
            _, _, = load_dataset_from_brat(brat_datadir_name)

    def test_load_dataset_from_brat_negative02(self):
        brat_datadir_name = os.path.join(os.path.dirname(__file__), 'testdata', 'bad_brat_data')
        true_err_msg = re.escape('The annotation file `002.ann` has not a corresponding text file!')
        with self.assertRaisesRegex(ValueError, true_err_msg):
            _, _, = load_dataset_from_brat(brat_datadir_name)

    def test_load_dataset_from_bio_positive01(self):
        bio_file_name = os.path.join(os.path.dirname(__file__), 'testdata', 'bio.txt')
        true_texts = [
            '-DOCSTART-',
            'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.',
            'Nadim Ladki',
            'AL-AIN, United Arab Emirates 1996-12-06',
            'Japan coach Shu Kamo said: \'\' The Syrian own goal proved lucky for us.',
            'Percent change 1.8% 21.8% - 4.4%',
            '-DOCSTART-',
            'FREESTYLE SKIING-WORLD CUP MOGUL RESULTS.'
        ]
        true_entities = [
            dict(),
            {'LOC': [(9, 14)], 'PER': [(30, 35)]},
            {'PER': [(0, 11)]},
            {'LOC': [(0, 6), (8, 28)]},
            {'LOC': [(0, 5)], 'PER': [(12, 20)], 'MISC': [(34, 40)]},
            dict(),
            dict(),
            {'MISC': [(10, 26)]}
        ]
        loaded_texts, loaded_entities = load_dataset_from_bio(bio_file_name)
        self.assertIsInstance(loaded_texts, list)
        self.assertIsInstance(loaded_entities, list)
        self.assertEqual(len(true_texts), len(loaded_texts))
        self.assertEqual(true_texts, loaded_texts)
        self.assertEqual(len(true_entities), len(loaded_entities))
        for idx in range(len(true_entities)):
            self.assertIsInstance(loaded_entities[idx], dict, msg='Sample {0}'.format(idx))
            self.assertEqual(set(true_entities[idx].keys()), set(loaded_entities[idx].keys()),
                             msg='Sample {0}'.format(idx))
            for ne_type in true_entities[idx]:
                self.assertIsInstance(loaded_entities[idx][ne_type], list, msg='Sample {0}'.format(idx))
                self.assertEqual(true_entities[idx][ne_type], loaded_entities[idx][ne_type],
                                 msg='Sample {0}'.format(idx))

    def test_load_dataset_from_bio_positive02(self):
        bio_file_name = os.path.join(os.path.dirname(__file__), 'testdata', 'bio.txt')
        true_texts = [
            'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.',
            'Nadim Ladki',
            'AL-AIN, United Arab Emirates 1996-12-06',
            'Japan coach Shu Kamo said: \'\' The Syrian own goal proved lucky for us.',
            'Percent change 1.8% 21.8% - 4.4%',
            'FREESTYLE SKIING-WORLD CUP MOGUL RESULTS.',
        ]
        true_entities = [
            {'LOC': [(9, 14)], 'PER': [(30, 35)]},
            {'PER': [(0, 11)]},
            {'LOC': [(0, 6), (8, 28)]},
            {'LOC': [(0, 5)], 'PER': [(12, 20)], 'MISC': [(34, 40)]},
            dict(),
            {'MISC': [(10, 26)]}
        ]
        loaded_texts, loaded_entities = load_dataset_from_bio(bio_file_name, stopwords={'-DOCSTART-'})
        self.assertIsInstance(loaded_texts, list)
        self.assertIsInstance(loaded_entities, list)
        self.assertEqual(len(true_texts), len(loaded_texts))
        self.assertEqual(true_texts, loaded_texts)
        self.assertEqual(len(true_entities), len(loaded_entities))
        for idx in range(len(true_entities)):
            self.assertIsInstance(loaded_entities[idx], dict, msg='Sample {0}'.format(idx))
            self.assertEqual(set(true_entities[idx].keys()), set(loaded_entities[idx].keys()),
                             msg='Sample {0}'.format(idx))
            for ne_type in true_entities[idx]:
                self.assertIsInstance(loaded_entities[idx][ne_type], list, msg='Sample {0}'.format(idx))
                self.assertEqual(true_entities[idx][ne_type], loaded_entities[idx][ne_type],
                                 msg='Sample {0}'.format(idx))

    def test_load_dataset_from_bio_positive03(self):
        bio_file_name = os.path.join(os.path.dirname(__file__), 'testdata', 'bio.txt')
        true_texts = [
            'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT. Nadim Ladki AL-AIN, United Arab Emirates '
            '1996-12-06 Japan coach Shu Kamo said: \'\' The Syrian own goal proved lucky for us. '
            'Percent change 1.8% 21.8% - 4.4%',
            'FREESTYLE SKIING-WORLD CUP MOGUL RESULTS.',
        ]
        true_entities = [
            {'LOC': [(9, 14), (68, 74), (76, 96), (108, 113)], 'PER': [(30, 35), (56, 67), (120, 128)],
             'MISC': [(142, 148)]},
            {'MISC': [(10, 26)]}
        ]
        loaded_texts, loaded_entities = load_dataset_from_bio(bio_file_name, paragraph_separators={'-DOCSTART-'},
                                                              stopwords={'-DOCSTART-'})
        self.assertIsInstance(loaded_texts, list)
        self.assertIsInstance(loaded_entities, list)
        self.assertEqual(len(true_texts), len(loaded_texts))
        self.assertEqual(true_texts, loaded_texts)
        self.assertEqual(len(true_entities), len(loaded_entities))
        for idx in range(len(true_entities)):
            self.assertIsInstance(loaded_entities[idx], dict, msg='Sample {0}'.format(idx))
            self.assertEqual(set(true_entities[idx].keys()), set(loaded_entities[idx].keys()),
                             msg='Sample {0}'.format(idx))
            for ne_type in true_entities[idx]:
                self.assertIsInstance(loaded_entities[idx][ne_type], list, msg='Sample {0}'.format(idx))
                self.assertEqual(true_entities[idx][ne_type], loaded_entities[idx][ne_type],
                                 msg='Sample {0}'.format(idx))

    def test_get_bio_label_of_token_positive01(self):
        source_text = 'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.'
        named_entities = {'LOC': [(9, 14)], 'PER': [(30, 35)]}
        true_label = 'B-PER'
        calculated_label = get_bio_label_of_token(source_text, (30, 35), named_entities)
        self.assertEqual(true_label, calculated_label)

    def test_get_bio_label_of_token_positive02(self):
        source_text = 'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.'
        named_entities = {'LOC': [(9, 14)], 'PER': [(30, 35)]}
        true_label = 'B-LOC'
        calculated_label = get_bio_label_of_token(source_text, (9, 14), named_entities)
        self.assertEqual(true_label, calculated_label)

    def test_get_bio_label_of_token_positive03(self):
        source_text = 'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.'
        named_entities = {'LOC': [(9, 14)], 'PER': [(30, 35)]}
        true_label = 'O'
        calculated_label = get_bio_label_of_token(source_text, (39, 47), named_entities)
        self.assertEqual(true_label, calculated_label)

    def test_get_bio_label_of_token_positive04(self):
        source_text = 'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.'
        named_entities = {'LOC': [(9, 14)], 'PER': [(30, 35)]}
        true_label = 'O'
        calculated_label = get_bio_label_of_token(source_text, (35, 38), named_entities)
        self.assertEqual(true_label, calculated_label)

    def test_get_bio_label_of_token_positive05(self):
        source_text = 'Japan coach Shu Kamo said: \'\' The Syrian own goal proved lucky for us.'
        named_entities = {'LOC': [(0, 5)], 'PER': [(12, 20)], 'MISC': [(34, 40)]}
        true_label = 'I-PER'
        calculated_label = get_bio_label_of_token(source_text, (16, 20), named_entities)
        self.assertEqual(true_label, calculated_label)

    def test_save_dataset_as_bio_positive01(self):
        source_texts = [
            'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.',
            'Nadim Ladki',
            'AL-AIN, United Arab Emirates 1996-12-06',
            'Japan coach Shu Kamo said: \'\' The Syrian own goal proved lucky for us.',
            'Percent change 1.8% 21.8% - 4.4%',
            'FREESTYLE SKIING-WORLD CUP MOGUL RESULTS.',
        ]
        source_entities = [
            {'LOC': [(9, 14)], 'PER': [(30, 35)]},
            {'PER': [(0, 11)]},
            {'LOC': [(0, 6), (8, 28)]},
            {'LOC': [(0, 5)], 'PER': [(12, 20)], 'MISC': [(34, 40)]},
            dict(),
            {'MISC': [(10, 26)]}
        ]
        save_dataset_as_bio(os.path.join(os.path.dirname(__file__), 'testdata', 'bio.txt'), source_texts,
                            source_entities, self.tmp_data_name, stopwords={'-DOCSTART-'})
        true_lines = [
            "-DOCSTART- -X- -X- O O",
            "",
            "SOCCER NN B-NP O O",
            "- : O O O",
            "JAPAN NNP B-NP B-LOC B-LOC",
            "GET VB B-VP O O",
            "LUCKY NNP B-NP O O",
            "WIN NNP I-NP O O",
            ", , O O O",
            "CHINA NNP B-NP B-PER B-PER",
            "IN IN B-PP O O",
            "SURPRISE DT B-NP O O",
            "DEFEAT NN I-NP O O",
            ". . O O O",
            "",
            "Nadim NNP B-NP B-PER B-PER",
            "Ladki NNP I-NP I-PER I-PER",
            "",
            "AL-AIN NNP B-NP B-LOC B-LOC",
            ", , O O O",
            "United NNP B-NP B-LOC B-LOC",
            "Arab NNP I-NP I-LOC I-LOC",
            "Emirates NNPS I-NP I-LOC I-LOC",
            "1996-12-06 CD I-NP O O",
            "",
            "Japan NNP B-NP B-LOC B-LOC",
            "coach NN I-NP O O",
            "Shu NNP I-NP B-PER B-PER",
            "Kamo NNP I-NP I-PER I-PER",
            "said VBD B-VP O O",
            ": : O O O",
            "' '' O O O",
            "' POS B-NP O O",
            "The DT I-NP O O",
            "Syrian JJ I-NP B-MISC B-MISC",
            "own JJ I-NP O O",
            "goal NN I-NP O O",
            "proved VBD B-VP O O",
            "lucky JJ B-ADJP O O",
            "for IN B-PP O O",
            "us PRP B-NP O O",
            ". . O O O",
            "",
            "Percent NN B-NP O O",
            "change NN I-NP O O",
            "1.8 CD B-NP O O",
            "% NN I-NP O O",
            "21.8 CD B-NP O O",
            "% NN I-NP O O",
            "- : O O O",
            "4.4 CD B-NP O O",
            "% NN I-NP O O",
            "",
            "-DOCSTART- -X- -X- O O",
            "",
            "FREESTYLE NNP B-NP O O",
            "SKIING-WORLD NNP I-NP B-MISC B-MISC",
            "CUP NNP I-NP I-MISC I-MISC",
            "MOGUL NNP I-NP O O",
            "RESULTS NNS I-NP O O",
            ". . O O O"
        ]
        with codecs.open(self.tmp_data_name, mode='r', encoding='utf-8', errors='ignore') as fp:
            loaded_lines = list(map(lambda it: it.strip(), fp.readlines()))
        while len(loaded_lines) > 0:
            if len(loaded_lines[0].strip()) > 0:
                break
            del loaded_lines[0]
        while len(loaded_lines) > 0:
            if len(loaded_lines[-1].strip()) > 0:
                break
            del loaded_lines[-1]
        self.assertEqual(len(true_lines), len(loaded_lines))
        self.assertEqual(true_lines, loaded_lines)

    def test_save_dataset_as_bio_positive02(self):
        source_texts = [
            'SOCCER - JAPAN GET LUCKY WIN, CHINA IN SURPRISE DEFEAT.',
            'Nadim Ladki',
            'AL-AIN, United Arab Emirates 1996-12-06',
            'Japan coach Shu Kamo said:',
            'Percent change 1.8% 21.8% - 4.4%',
            'FREESTYLE SKIING-WORLD CUP MOGUL RESULTS.',
        ]
        source_entities = [
            {'LOC': [(8, 14)], 'PER': [(30, 35)]},
            {'PER': [(1, 11)]},
            {'LOC': [(0, 6), (8, 28)]},
            {'LOC': [(0, 5)], 'PER': [(12, 22)]},
            dict(),
            {'MISC': [(10, 26)]}
        ]
        save_dataset_as_bio(os.path.join(os.path.dirname(__file__), 'testdata', 'bio.txt'), source_texts,
                            source_entities, self.tmp_data_name, stopwords={'-DOCSTART-'})
        true_lines = [
            "-DOCSTART- -X- -X- O O",
            "",
            "SOCCER NN B-NP O O",
            "- : O O O",
            "JAPAN NNP B-NP B-LOC B-LOC",
            "GET VB B-VP O O",
            "LUCKY NNP B-NP O O",
            "WIN NNP I-NP O O",
            ", , O O O",
            "CHINA NNP B-NP B-PER B-PER",
            "IN IN B-PP O O",
            "SURPRISE DT B-NP O O",
            "DEFEAT NN I-NP O O",
            ". . O O O",
            "",
            "Nadim NNP B-NP B-PER B-PER",
            "Ladki NNP I-NP I-PER I-PER",
            "",
            "AL-AIN NNP B-NP B-LOC B-LOC",
            ", , O O O",
            "United NNP B-NP B-LOC B-LOC",
            "Arab NNP I-NP I-LOC I-LOC",
            "Emirates NNPS I-NP I-LOC I-LOC",
            "1996-12-06 CD I-NP O O",
            "",
            "Japan NNP B-NP B-LOC B-LOC",
            "coach NN I-NP O O",
            "Shu NNP I-NP B-PER B-PER",
            "Kamo NNP I-NP I-PER I-PER",
            "said VBD B-VP O O",
            ": : O O O",
            "' '' O O O",
            "' POS B-NP O O",
            "The DT I-NP O O",
            "Syrian JJ I-NP B-MISC O",
            "own JJ I-NP O O",
            "goal NN I-NP O O",
            "proved VBD B-VP O O",
            "lucky JJ B-ADJP O O",
            "for IN B-PP O O",
            "us PRP B-NP O O",
            ". . O O O",
            "",
            "Percent NN B-NP O O",
            "change NN I-NP O O",
            "1.8 CD B-NP O O",
            "% NN I-NP O O",
            "21.8 CD B-NP O O",
            "% NN I-NP O O",
            "- : O O O",
            "4.4 CD B-NP O O",
            "% NN I-NP O O",
            "",
            "-DOCSTART- -X- -X- O O",
            "",
            "FREESTYLE NNP B-NP O O",
            "SKIING-WORLD NNP I-NP B-MISC B-MISC",
            "CUP NNP I-NP I-MISC I-MISC",
            "MOGUL NNP I-NP O O",
            "RESULTS NNS I-NP O O",
            ". . O O O"
        ]
        with codecs.open(self.tmp_data_name, mode='r', encoding='utf-8', errors='ignore') as fp:
            loaded_lines = list(map(lambda it: it.strip(), fp.readlines()))
        while len(loaded_lines) > 0:
            if len(loaded_lines[0].strip()) > 0:
                break
            del loaded_lines[0]
        while len(loaded_lines) > 0:
            if len(loaded_lines[-1].strip()) > 0:
                break
            del loaded_lines[-1]
        self.assertEqual(len(true_lines), len(loaded_lines))
        self.assertEqual(true_lines, loaded_lines)

    def test_divide_dataset_by_sentences_positive01(self):
        X_src = [
            'Прокуратурой Ленинградской области утверждено и направлено в суд обвинительное заключение по уголовному '
            'делу в отношении главы администрации Токсовского городского поселения Всеволожского района Л. Колесника, '
            'обвиняемого в совершении преступления, предусмотренного ч. 3 ст 30, ч. 3 ст 159 Уголовного кодекса '
            'России. По имеющейся информации, 22 июля Л.Н. Колесник вышел на работу и приступил к исполнению '
            'обязанностей главы администрации муниципального образования.',
            'МОСКВА, 4 авг - РИА Новости. Россия рассчитывает, что США воздействуют на Тбилиси в связи с обострением '
            'ситуации в зоне грузино-осетинского конфликта. Об этом статс-секретарь - заместитель министра иностранных '
            'дел России Григорий Карасин заявил в телефонном разговоре с заместителем госсекретаря США Дэниэлом '
            'Фридом.'
        ]
        y_src = [
            {
                'LOC': [(13, 34), (141, 173), (174, 194), (308, 314)],
                'PER': [(195, 207), (349, 362)]
            },
            {
                'PER': [(221, 237), (300, 315)],
                'LOC': [(0, 6), (29, 35), (54, 57), (74, 81), (214, 220), (296, 299)],
                'ORG': [(16, 27)]
            }
        ]
        X_true = [
            'Прокуратурой Ленинградской области утверждено и направлено в суд обвинительное заключение по уголовному '
            'делу в отношении главы администрации Токсовского городского поселения Всеволожского района Л. Колесника, '
            'обвиняемого в совершении преступления, предусмотренного ч.',
            '3 ст 30, ч.',
            '3 ст 159 Уголовного кодекса России.',
            'По имеющейся информации, 22 июля Л.Н. Колесник вышел на работу и приступил к исполнению обязанностей '
            'главы администрации муниципального образования.',
            'МОСКВА, 4 авг - РИА Новости.',
            'Россия рассчитывает, что США воздействуют на Тбилиси в связи с обострением ситуации в зоне '
            'грузино-осетинского конфликта.',
            'Об этом статс-секретарь - заместитель министра иностранных дел России Григорий Карасин заявил в '
            'телефонном разговоре с заместителем госсекретаря США Дэниэлом Фридом.'
        ]
        y_true = [
            {
                'LOC': [(13, 34), (141, 173), (174, 194)],
                'PER': [(195, 207)]
            },
            dict(),
            {
                'LOC': [(28, 34)]
            },
            {
                'PER': [(33, 46)]
            },
            {
                'LOC': [(0, 6)],
                'ORG': [(16, 27)]
            },
            {
                'LOC': [(0, 6), (25, 28), (45, 52)]
            },
            {
                'PER': [(70, 86), (149, 164)],
                'LOC': [(63, 69), (145, 148)]
            }
        ]
        X_pred, y_pred = divide_dataset_by_sentences(X_src, y_src)
        self.assertIsInstance(X_pred, list)
        self.assertIsInstance(y_pred, list)
        self.assertEqual(len(X_true), len(X_pred))
        self.assertEqual(len(y_true), len(y_pred))
        self.assertEqual(X_true, X_pred)
        for sample_idx in range(len(y_true)):
            self.assertIsInstance(y_pred[sample_idx], dict)
            self.assertEqual(set(y_true[sample_idx].keys()), set(y_pred[sample_idx].keys()))
            for ne_type in sorted(list(y_true[sample_idx].keys())):
                self.assertIsInstance(y_pred[sample_idx][ne_type], list)
                self.assertEqual(y_true[sample_idx][ne_type], y_pred[sample_idx][ne_type])

    def test_normalize_text_1(self):
        s = '2016 год — 12 498\t 096,80  рублей;'
        true_normalized = '2016 год - 12 498  096,80  рублей;'
        predicted_normalized = normalize_text(s)
        self.assertEqual(true_normalized, predicted_normalized)

    def test_normalize_text_2(self):
        s = 'В 1911–1912 годах журналы «Киевская неделя» и «Лукоморье» опубликовали первые рассказы Вертинского'
        true_normalized = 'В 1911-1912 годах журналы «Киевская неделя» и «Лукоморье» опубликовали первые рассказы Вертинского'
        predicted_normalized = normalize_text(s)
        self.assertEqual(true_normalized, predicted_normalized)


if __name__ == '__main__':
    unittest.main(verbosity=2)
